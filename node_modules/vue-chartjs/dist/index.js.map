{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/BaseCharts.ts"],"sourcesContent":["import type {\n  ChartType,\n  ChartDataset,\n  DefaultDataPoint,\n  PluginOptionsByType\n} from 'chart.js'\n\nimport type { TChartData, TChartOptions, TypedChartJS } from './types'\n\nimport { SetupContext } from 'vue'\n\nexport enum ChartEmits {\n  ChartRendered = 'chart:rendered',\n  ChartUpdated = 'chart:updated',\n  ChartDestroyed = 'chart:destroyed',\n  LabelsUpdated = 'labels:updated'\n}\n\nexport function chartCreate<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  createChartFunction: (\n    data: TChartData<TType, TData, TLabel>,\n    options: TChartOptions<TType>\n  ) => void,\n  chartData: TChartData<TType, TData, TLabel>,\n  chartOptions: TChartOptions<TType>,\n  context?: SetupContext\n): void {\n  createChartFunction(chartData, chartOptions)\n\n  if (context !== undefined) {\n    context.emit(ChartEmits.ChartRendered)\n  }\n}\n\nexport function chartUpdate<\n  TType extends ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: TypedChartJS<TType, TData, TLabel>, context?: SetupContext): void {\n  chart.update()\n\n  if (context !== undefined) {\n    context.emit(ChartEmits.ChartUpdated)\n  }\n}\n\nexport function chartDestroy<\n  TType extends ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: TypedChartJS<TType, TData, TLabel>, context?: SetupContext): void {\n  chart.destroy()\n\n  if (context !== undefined) {\n    context.emit(ChartEmits.ChartDestroyed)\n  }\n}\n\nexport function getChartData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  data: TChartData<TType, TData, TLabel>,\n  datasetIdKey: string\n): TChartData<TType, TData, TLabel> {\n  const nextData = {\n    labels: typeof data.labels === 'undefined' ? [] : [...data.labels],\n    datasets: []\n  }\n\n  setChartDatasets(nextData, { ...data }, datasetIdKey)\n  return nextData\n}\n\nexport function getChartOptions<TType extends ChartType = ChartType>(\n  options?: TChartOptions<TType>,\n  plugins?: PluginOptionsByType<TType>\n): TChartOptions<TType> | undefined {\n  const chartOptions = options\n\n  if (\n    chartOptions !== undefined &&\n    'plugins' in chartOptions &&\n    typeof plugins !== 'undefined' &&\n    Object.keys(plugins).length > 0\n  ) {\n    chartOptions.plugins = {\n      ...chartOptions.plugins,\n      ...plugins\n    }\n  }\n\n  return chartOptions\n}\n\nexport function setChartDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  oldData: TChartData<TType, TData, TLabel>,\n  newData: TChartData<TType, TData, TLabel>,\n  datasetIdKey: string\n): void {\n  const addedDatasets: ChartDataset<TType, TData>[] = []\n\n  oldData.datasets = newData.datasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = oldData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      )\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset }\n      }\n\n      addedDatasets.push(currentDataset)\n\n      Object.assign(currentDataset, nextDataset)\n\n      return currentDataset\n    }\n  ) as ChartDataset<TType, TData>[]\n}\n\nexport function setChartLabels<\n  TType extends ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  chart: TypedChartJS<TType, TData, TLabel>,\n  labels: TLabel[] | undefined,\n  context?: SetupContext\n): void {\n  chart.data.labels = labels\n\n  if (context !== undefined) {\n    context.emit(ChartEmits.LabelsUpdated)\n  }\n}\n\nexport function compareData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  newData: TChartData<TType, TData, TLabel>,\n  oldData: TChartData<TType, TData, TLabel>\n): boolean {\n  // Get new and old DataSet Labels\n  const newDatasetLabels = newData.datasets.map(dataset => {\n    return dataset.label\n  })\n\n  const oldDatasetLabels = oldData.datasets.map(dataset => {\n    return dataset.label\n  })\n\n  // Check if Labels are equal and if dataset length is equal\n  return (\n    oldData.datasets.length === newData.datasets.length &&\n    newDatasetLabels.every((value, index) => value === oldDatasetLabels[index])\n  )\n}\n\nexport const templateError =\n  'Please remove the <template></template> tags from your chart component. See https://vue-chartjs.org/guide/#vue-single-file-components'\n","import {\n  Chart as ChartJS,\n  BarController,\n  BubbleController,\n  DoughnutController,\n  LineController,\n  PieController,\n  PolarAreaController,\n  RadarController,\n  ScatterController\n} from 'chart.js'\n\nimport type {\n  ChartType,\n  ChartComponentLike,\n  DefaultDataPoint,\n  PluginOptionsByType,\n  ChartOptions\n} from 'chart.js'\n\nimport {\n  defineComponent,\n  ref,\n  shallowRef,\n  h,\n  onMounted,\n  onBeforeUnmount,\n  watch,\n  isProxy,\n  toRaw,\n  PropType\n} from 'vue'\n\nimport {\n  chartCreate,\n  chartDestroy,\n  chartUpdate,\n  getChartOptions,\n  getChartData,\n  setChartLabels,\n  setChartDatasets,\n  compareData,\n  templateError\n} from './utils'\n\nimport type {\n  TChartData,\n  TChartOptions,\n  TypedChartJS,\n  TypedChartComponent\n} from './types'\n\nexport const generateChart = <\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  chartId: string,\n  chartType: TType,\n  chartController: ChartComponentLike\n): TypedChartComponent<TType, TData, TLabel> =>\n  defineComponent({\n    props: {\n      chartData: {\n        type: Object as PropType<TChartData<TType, TData, TLabel>>,\n        required: true\n      },\n      chartOptions: {\n        type: Object as PropType<TChartOptions<TType>>,\n        default: () => {}\n      },\n      datasetIdKey: {\n        type: String,\n        default: 'label'\n      },\n      chartId: {\n        type: String,\n        default: chartId\n      },\n      width: {\n        type: Number,\n        default: 400\n      },\n      height: {\n        type: Number,\n        default: 400\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object as PropType<Partial<CSSStyleDeclaration>>,\n        default: () => {}\n      },\n      plugins: {\n        type: Object as PropType<PluginOptionsByType<TType>>,\n        default: () => {}\n      }\n    },\n    setup(props, context) {\n      ChartJS.register(chartController)\n\n      const _chart = shallowRef<TypedChartJS<TType, TData, TLabel> | null>(null)\n      const canvasEl = ref<HTMLCanvasElement | null>(null)\n\n      function renderChart(\n        data: TChartData<TType, TData, TLabel>,\n        options: TChartOptions<TType>\n      ): void {\n        if (_chart.value !== null) {\n          chartDestroy<TType, TData, TLabel>(toRaw(_chart.value), context)\n        }\n\n        if (canvasEl.value === null) {\n          throw new Error(templateError)\n        } else {\n          const chartData = getChartData<TType, TData, TLabel>(\n            data,\n            props.datasetIdKey\n          )\n          const canvasEl2DContext = canvasEl.value.getContext('2d')\n\n          if (canvasEl2DContext !== null) {\n            _chart.value = new ChartJS<TType, TData, TLabel>(\n              canvasEl2DContext,\n              {\n                type: chartType,\n                data: isProxy(data) ? new Proxy(chartData, {}) : chartData,\n                options: getChartOptions<TType>(options, props.plugins)\n              }\n            )\n          }\n        }\n      }\n\n      function chartDataHandler(\n        newValue: TChartData<TType, TData, TLabel>,\n        oldValue: TChartData<TType, TData, TLabel>\n      ): void {\n        const newData = isProxy(newValue) ? toRaw(newValue) : { ...newValue }\n        const oldData = isProxy(oldValue) ? toRaw(oldValue) : { ...oldValue }\n\n        if (Object.keys(oldData).length > 0) {\n          const chart = toRaw(_chart.value)\n\n          const isEqualLabelsAndDatasetsLength = compareData<\n            TType,\n            TData,\n            TLabel\n          >(newData, oldData)\n\n          if (isEqualLabelsAndDatasetsLength && chart !== null) {\n            setChartDatasets<TType, TData, TLabel>(\n              chart?.data,\n              newData,\n              props.datasetIdKey\n            )\n\n            if (newData.labels !== undefined) {\n              setChartLabels<TType, TData, TLabel>(\n                chart,\n                newData.labels,\n                context\n              )\n            }\n\n            chartUpdate<TType, TData, TLabel>(chart, context)\n          } else {\n            if (chart !== null) {\n              chartDestroy<TType, TData, TLabel>(chart, context)\n            }\n\n            chartCreate<TType, TData, TLabel>(\n              renderChart,\n              props.chartData,\n              props.chartOptions as ChartOptions<TType>,\n              context\n            )\n          }\n        } else {\n          if (_chart.value !== null) {\n            chartDestroy<TType, TData, TLabel>(toRaw(_chart.value), context)\n          }\n\n          chartCreate<TType, TData, TLabel>(\n            renderChart,\n            props.chartData,\n            props.chartOptions as ChartOptions<TType>,\n            context\n          )\n        }\n      }\n\n      watch(\n        () => props.chartData,\n        (\n          newValue: TChartData<TType, TData, TLabel>,\n          oldValue: TChartData<TType, TData, TLabel>\n        ) => chartDataHandler(newValue, oldValue),\n        { deep: true }\n      )\n\n      onMounted(() => {\n        if (\n          'datasets' in props.chartData &&\n          props.chartData.datasets.length > 0\n        ) {\n          chartCreate<TType, TData, TLabel>(\n            renderChart,\n            props.chartData,\n            props.chartOptions as ChartOptions<TType>,\n            context\n          )\n        }\n      })\n\n      onBeforeUnmount(() => {\n        if (_chart.value !== null) {\n          chartDestroy(toRaw(_chart.value), context)\n        }\n      })\n\n      return () =>\n        h('div', { style: props.styles, class: props.cssClasses }, [\n          h('canvas', {\n            id: props.chartId,\n            width: props.width,\n            height: props.height,\n            ref: canvasEl\n          })\n        ])\n    }\n  }) as any\n\nexport const Bar = /* #__PURE__ */ generateChart(\n  'bar-chart',\n  'bar',\n  BarController\n)\n\nexport const Doughnut = /* #__PURE__ */ generateChart(\n  'doughnut-chart',\n  'doughnut',\n  DoughnutController\n)\n\nexport const Line = /* #__PURE__ */ generateChart(\n  'line-chart',\n  'line',\n  LineController\n)\n\nexport const Pie = /* #__PURE__ */ generateChart(\n  'pie-chart',\n  'pie',\n  PieController\n)\n\nexport const PolarArea = /* #__PURE__ */ generateChart(\n  'polar-chart',\n  'polarArea',\n  PolarAreaController\n)\n\nexport const Radar = /* #__PURE__ */ generateChart(\n  'radar-chart',\n  'radar',\n  RadarController\n)\n\nexport const Bubble = /* #__PURE__ */ generateChart(\n  'bubble-chart',\n  'bubble',\n  BubbleController\n)\n\nexport const Scatter = /* #__PURE__ */ generateChart(\n  'scatter-chart',\n  'scatter',\n  ScatterController\n)\n\nexport default {\n  Bar,\n  Doughnut,\n  Line,\n  Pie,\n  PolarArea,\n  Radar,\n  Bubble,\n  Scatter\n}\n"],"names":["ChartEmits","ChartRendered","ChartUpdated","ChartDestroyed","LabelsUpdated","chartCreate","createChartFunction","chartData","chartOptions","context","undefined","emit","chartUpdate","chart","update","chartDestroy","destroy","getChartData","data","datasetIdKey","nextData","labels","datasets","setChartDatasets","getChartOptions","options","plugins","Object","keys","length","oldData","newData","addedDatasets","map","nextDataset","currentDataset","find","dataset","includes","push","assign","setChartLabels","compareData","newDatasetLabels","label","oldDatasetLabels","every","value","index","templateError","generateChart","chartId","chartType","chartController","defineComponent","props","type","required","default","String","width","Number","height","cssClasses","styles","setup","ChartJS","register","_chart","shallowRef","canvasEl","ref","renderChart","toRaw","Error","canvasEl2DContext","getContext","isProxy","Proxy","chartDataHandler","newValue","oldValue","isEqualLabelsAndDatasetsLength","watch","deep","onMounted","onBeforeUnmount","h","style","class","id","Bar","BarController","Doughnut","DoughnutController","Line","LineController","Pie","PieController","PolarArea","PolarAreaController","Radar","RadarController","Bubble","BubbleController","Scatter","ScatterController"],"mappings":"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"}