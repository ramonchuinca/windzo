{"ast":null,"code":"// this configuration use for theme dark and light for tailwindcss\n// you can use this for personal project or others without libs download\nexport const setDarkMode = toggle => {\n  if (localStorage.getItem(\"color-theme\")) {\n    if (toggle) {\n      document.documentElement.classList.add(\"dark\");\n      localStorage.setItem(\"color-theme\", \"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n      localStorage.setItem(\"color-theme\", \"light\");\n    } // if NOT set via local storage previously\n\n  } else {\n    if (document.documentElement.classList.contains(\"light\")) {\n      document.documentElement.classList.remove(\"dark\");\n      localStorage.setItem(\"color-theme\", \"light\");\n    } else {\n      document.documentElement.classList.add(\"dark\");\n      localStorage.setItem(\"color-theme\", \"dark\");\n    }\n  }\n};\nexport const loadDarkMode = () => {\n  const isDark = localStorage.getItem(\"color-theme\") == \"dark\" ? true : false;\n\n  if (localStorage.getItem(\"color-theme\")) {\n    if (localStorage.getItem(\"color-theme\") === \"dark\") {\n      document.documentElement.classList.add(\"dark\");\n      localStorage.setItem(\"color-theme\", \"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n      localStorage.setItem(\"color-theme\", \"light\");\n    } // if NOT set via local storage previously\n\n  } else {\n    if (document.documentElement.classList.contains(\"light\")) {\n      document.documentElement.classList.remove(\"dark\");\n      localStorage.setItem(\"color-theme\", \"light\");\n    } else {\n      document.documentElement.classList.add(\"dark\");\n      localStorage.setItem(\"color-theme\", \"dark\");\n    }\n  }\n\n  return isDark;\n};","map":{"version":3,"sources":["C:/Users/pen6-mkt/Desktop/PASTA COM TRABALHOS DA PEN 6/windzo/src/helper/theme.js"],"names":["setDarkMode","toggle","localStorage","getItem","document","documentElement","classList","add","setItem","remove","contains","loadDarkMode","isDark"],"mappings":"AAAA;AACA;AAEA,OAAO,MAAMA,WAAW,GAAIC,MAAD,IAAY;AACrC,MAAIC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAJ,EAAyC;AACvC,QAAIF,MAAJ,EAAY;AACVG,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,GAAnC,CAAuC,MAAvC;AACAL,MAAAA,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoC,MAApC;AACD,KAHD,MAGO;AACLJ,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCG,MAAnC,CAA0C,MAA1C;AACAP,MAAAA,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoC,OAApC;AACD,KAPsC,CAQvC;;AACD,GATD,MASO;AACL,QAAIJ,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCI,QAAnC,CAA4C,OAA5C,CAAJ,EAA0D;AACxDN,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCG,MAAnC,CAA0C,MAA1C;AACAP,MAAAA,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoC,OAApC;AACD,KAHD,MAGO;AACLJ,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,GAAnC,CAAuC,MAAvC;AACAL,MAAAA,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoC,MAApC;AACD;AACF;AACF,CAnBM;AAqBP,OAAO,MAAMG,YAAY,GAAG,MAAM;AAChC,QAAMC,MAAM,GAAGV,YAAY,CAACC,OAAb,CAAqB,aAArB,KAAuC,MAAvC,GAAgD,IAAhD,GAAuD,KAAtE;;AAEA,MAAID,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAJ,EAAyC;AACvC,QAAID,YAAY,CAACC,OAAb,CAAqB,aAArB,MAAwC,MAA5C,EAAoD;AAClDC,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,GAAnC,CAAuC,MAAvC;AACAL,MAAAA,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoC,MAApC;AACD,KAHD,MAGO;AACLJ,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCG,MAAnC,CAA0C,MAA1C;AACAP,MAAAA,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoC,OAApC;AACD,KAPsC,CAQvC;;AACD,GATD,MASO;AACL,QAAIJ,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCI,QAAnC,CAA4C,OAA5C,CAAJ,EAA0D;AACxDN,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCG,MAAnC,CAA0C,MAA1C;AACAP,MAAAA,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoC,OAApC;AACD,KAHD,MAGO;AACLJ,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,GAAnC,CAAuC,MAAvC;AACAL,MAAAA,YAAY,CAACM,OAAb,CAAqB,aAArB,EAAoC,MAApC;AACD;AACF;;AAED,SAAOI,MAAP;AACD,CAvBM","sourcesContent":["// this configuration use for theme dark and light for tailwindcss\r\n// you can use this for personal project or others without libs download\r\n\r\nexport const setDarkMode = (toggle) => {\r\n  if (localStorage.getItem(\"color-theme\")) {\r\n    if (toggle) {\r\n      document.documentElement.classList.add(\"dark\");\r\n      localStorage.setItem(\"color-theme\", \"dark\");\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\");\r\n      localStorage.setItem(\"color-theme\", \"light\");\r\n    }\r\n    // if NOT set via local storage previously\r\n  } else {\r\n    if (document.documentElement.classList.contains(\"light\")) {\r\n      document.documentElement.classList.remove(\"dark\");\r\n      localStorage.setItem(\"color-theme\", \"light\");\r\n    } else {\r\n      document.documentElement.classList.add(\"dark\");\r\n      localStorage.setItem(\"color-theme\", \"dark\");\r\n    }\r\n  }\r\n};\r\n\r\nexport const loadDarkMode = () => {\r\n  const isDark = localStorage.getItem(\"color-theme\") == \"dark\" ? true : false;\r\n\r\n  if (localStorage.getItem(\"color-theme\")) {\r\n    if (localStorage.getItem(\"color-theme\") === \"dark\") {\r\n      document.documentElement.classList.add(\"dark\");\r\n      localStorage.setItem(\"color-theme\", \"dark\");\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\");\r\n      localStorage.setItem(\"color-theme\", \"light\");\r\n    }\r\n    // if NOT set via local storage previously\r\n  } else {\r\n    if (document.documentElement.classList.contains(\"light\")) {\r\n      document.documentElement.classList.remove(\"dark\");\r\n      localStorage.setItem(\"color-theme\", \"light\");\r\n    } else {\r\n      document.documentElement.classList.add(\"dark\");\r\n      localStorage.setItem(\"color-theme\", \"dark\");\r\n    }\r\n  }\r\n\r\n  return isDark;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}