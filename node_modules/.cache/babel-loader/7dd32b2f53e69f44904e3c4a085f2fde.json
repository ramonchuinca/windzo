{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { h, defineComponent } from 'vue';\nconst matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst iconDefaults = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\n\nfunction fullIcon(data) {\n  return { ...iconDefaults,\n    ...data\n  };\n}\n\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n\n    provider = colonSeparated.shift().slice(1);\n  }\n\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIcon(result, allowSimpleName) ? null : result;\n  }\n\n  return null;\n};\n\nconst validateIcon = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n\n  return !!((icon.provider === \"\" || icon.provider.match(matchName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchName)) && icon.name.match(matchName));\n};\n\nfunction mergeIconData(icon, alias) {\n  const result = { ...icon\n  };\n\n  for (const key in iconDefaults) {\n    const prop = key;\n\n    if (alias[prop] !== void 0) {\n      const value = alias[prop];\n\n      if (result[prop] === void 0) {\n        result[prop] = value;\n        continue;\n      }\n\n      switch (prop) {\n        case \"rotate\":\n          result[prop] = (result[prop] + value) % 4;\n          break;\n\n        case \"hFlip\":\n        case \"vFlip\":\n          result[prop] = value !== result[prop];\n          break;\n\n        default:\n          result[prop] = value;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction getIconData$1(data, name, full = false) {\n  function getIcon(name2, iteration) {\n    if (data.icons[name2] !== void 0) {\n      return Object.assign({}, data.icons[name2]);\n    }\n\n    if (iteration > 5) {\n      return null;\n    }\n\n    if (data.aliases?.[name2] !== void 0) {\n      const item = data.aliases?.[name2];\n      const result2 = getIcon(item.parent, iteration + 1);\n\n      if (result2) {\n        return mergeIconData(result2, item);\n      }\n\n      return result2;\n    }\n\n    if (iteration === 0 && data.chars?.[name2] !== void 0) {\n      return getIcon(data.chars?.[name2], iteration + 1);\n    }\n\n    return null;\n  }\n\n  const result = getIcon(name, 0);\n\n  if (result) {\n    for (const key in iconDefaults) {\n      if (result[key] === void 0 && data[key] !== void 0) {\n        result[key] = data[key];\n      }\n    }\n  }\n\n  return result && full ? fullIcon(result) : result;\n}\n\nconst matchChar = /^[a-f0-9]+(-[a-f0-9]+)*$/;\n\nfunction validateIconProps(item, fix) {\n  for (const key in item) {\n    const attr = key;\n    const value = item[attr];\n    const type = typeof value;\n\n    if (type === \"undefined\") {\n      delete item[attr];\n      continue;\n    }\n\n    switch (key) {\n      case \"body\":\n      case \"parent\":\n        if (type !== \"string\") {\n          return key;\n        }\n\n        break;\n\n      case \"hFlip\":\n      case \"vFlip\":\n      case \"hidden\":\n        if (type !== \"boolean\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n\n        break;\n\n      case \"width\":\n      case \"height\":\n      case \"left\":\n      case \"top\":\n      case \"rotate\":\n      case \"inlineHeight\":\n      case \"inlineTop\":\n      case \"verticalAlign\":\n        if (type !== \"number\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n\n        break;\n\n      default:\n        if (type === \"object\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n\n    }\n  }\n\n  return null;\n}\n\nfunction validateIconSet(obj, options) {\n  const fix = !!options?.fix;\n\n  if (typeof obj !== \"object\" || obj === null || typeof obj.icons !== \"object\" || !obj.icons) {\n    throw new Error(\"Bad icon set\");\n  }\n\n  const data = obj;\n\n  if (typeof options?.prefix === \"string\") {\n    data.prefix = options.prefix;\n  } else if (typeof data.prefix !== \"string\" || !data.prefix.match(matchName)) {\n    throw new Error(\"Invalid prefix\");\n  }\n\n  if (typeof options?.provider === \"string\") {\n    data.provider = options.provider;\n  } else if (data.provider !== void 0) {\n    const value = data.provider;\n\n    if (typeof value !== \"string\" || value !== \"\" && !value.match(matchName)) {\n      if (fix) {\n        delete data.provider;\n      } else {\n        throw new Error(\"Invalid provider\");\n      }\n    }\n  }\n\n  const icons = data.icons;\n  Object.keys(icons).forEach(name => {\n    if (!name.match(matchName)) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n\n      throw new Error(`Invalid icon name: \"${name}\"`);\n    }\n\n    const item = icons[name];\n\n    if (typeof item !== \"object\" || item === null || typeof item.body !== \"string\") {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n\n      throw new Error(`Invalid icon: \"${name}\"`);\n    }\n\n    const key = typeof item.parent === \"string\" ? \"parent\" : validateIconProps(item, fix);\n\n    if (key !== null) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n\n      throw new Error(`Invalid property \"${key}\" in icon \"${name}\"`);\n    }\n  });\n\n  if (data.not_found !== void 0 && !(data.not_found instanceof Array)) {\n    if (fix) {\n      delete data.not_found;\n    } else {\n      throw new Error(\"Invalid not_found list\");\n    }\n  }\n\n  if (!Object.keys(data.icons).length && !data.not_found?.length) {\n    throw new Error(\"Icon set is empty\");\n  }\n\n  if (data.aliases !== void 0) {\n    if (typeof data.aliases !== \"object\" || data.aliases === null) {\n      if (fix) {\n        delete data.aliases;\n      } else {\n        throw new Error(\"Invalid aliases list\");\n      }\n    }\n  }\n\n  if (typeof data.aliases === \"object\") {\n    let validateAlias = function (name, iteration) {\n      if (validatedAliases.has(name)) {\n        return !failedAliases.has(name);\n      }\n\n      const item = aliases[name];\n\n      if (iteration > 5 || typeof item !== \"object\" || item === null || typeof item.parent !== \"string\" || !name.match(matchName)) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n\n        throw new Error(`Invalid icon alias: \"${name}\"`);\n      }\n\n      const parent = item.parent;\n\n      if (data.icons[parent] === void 0) {\n        if (aliases[parent] === void 0 || !validateAlias(parent, iteration + 1)) {\n          if (fix) {\n            delete aliases[name];\n            failedAliases.add(name);\n            return false;\n          }\n\n          throw new Error(`Missing parent icon for alias \"${name}`);\n        }\n      }\n\n      if (fix && item.body !== void 0) {\n        delete item.body;\n      }\n\n      const key = item.body !== void 0 ? \"body\" : validateIconProps(item, fix);\n\n      if (key !== null) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n\n        throw new Error(`Invalid property \"${key}\" in alias \"${name}\"`);\n      }\n\n      validatedAliases.add(name);\n      return true;\n    };\n\n    const aliases = data.aliases;\n    const validatedAliases = new Set();\n    const failedAliases = new Set();\n    Object.keys(aliases).forEach(name => {\n      validateAlias(name, 0);\n    });\n\n    if (fix && !Object.keys(data.aliases).length) {\n      delete data.aliases;\n    }\n  }\n\n  Object.keys(iconDefaults).forEach(prop => {\n    const expectedType = typeof iconDefaults[prop];\n    const actualType = typeof data[prop];\n\n    if (actualType !== \"undefined\" && actualType !== expectedType) {\n      throw new Error(`Invalid value type for \"${prop}\"`);\n    }\n  });\n\n  if (data.chars !== void 0) {\n    if (typeof data.chars !== \"object\" || data.chars === null) {\n      if (fix) {\n        delete data.chars;\n      } else {\n        throw new Error(\"Invalid characters map\");\n      }\n    }\n  }\n\n  if (typeof data.chars === \"object\") {\n    const chars = data.chars;\n    Object.keys(chars).forEach(char => {\n      if (!matchChar.exec(char) || typeof chars[char] !== \"string\") {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n\n        throw new Error(`Invalid character \"${char}\"`);\n      }\n\n      const target = chars[char];\n\n      if (data.icons[target] === void 0 && data.aliases?.[target] === void 0) {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n\n        throw new Error(`Character \"${char}\" points to missing icon \"${target}\"`);\n      }\n    });\n\n    if (fix && !Object.keys(data.chars).length) {\n      delete data.chars;\n    }\n  }\n\n  return data;\n}\n\nfunction isVariation(item) {\n  for (const key in iconDefaults) {\n    if (item[key] !== void 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction parseIconSet(data, callback, options) {\n  options = options || {};\n  const names = [];\n\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n\n  const validate = options.validate;\n\n  if (validate !== false) {\n    try {\n      validateIconSet(data, typeof validate === \"object\" ? validate : {\n        fix: true\n      });\n    } catch (err) {\n      return names;\n    }\n  }\n\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach(name => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n\n  const icons = data.icons;\n  Object.keys(icons).forEach(name => {\n    const iconData = getIconData$1(data, name, true);\n\n    if (iconData) {\n      callback(name, iconData);\n      names.push(name);\n    }\n  });\n  const parseAliases = options.aliases || \"all\";\n\n  if (parseAliases !== \"none\" && typeof data.aliases === \"object\") {\n    const aliases = data.aliases;\n    Object.keys(aliases).forEach(name => {\n      if (parseAliases === \"variations\" && isVariation(aliases[name])) {\n        return;\n      }\n\n      const iconData = getIconData$1(data, name, true);\n\n      if (iconData) {\n        callback(name, iconData);\n        names.push(name);\n      }\n    });\n  }\n\n  return names;\n}\n\nconst storageVersion = 1;\nlet storage$1 = /* @__PURE__ */Object.create(null);\n\ntry {\n  const w = window || self;\n\n  if (w?._iconifyStorage.version === storageVersion) {\n    storage$1 = w._iconifyStorage.storage;\n  }\n} catch (err) {}\n\nfunction shareStorage() {\n  try {\n    const w = window || self;\n\n    if (w && !w._iconifyStorage) {\n      w._iconifyStorage = {\n        version: storageVersion,\n        storage: storage$1\n      };\n    }\n  } catch (err) {}\n}\n\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */Object.create(null),\n    missing: /* @__PURE__ */Object.create(null)\n  };\n}\n\nfunction getStorage(provider, prefix) {\n  if (storage$1[provider] === void 0) {\n    storage$1[provider] = /* @__PURE__ */Object.create(null);\n  }\n\n  const providerStorage = storage$1[provider];\n\n  if (providerStorage[prefix] === void 0) {\n    providerStorage[prefix] = newStorage(provider, prefix);\n  }\n\n  return providerStorage[prefix];\n}\n\nfunction addIconSet(storage2, data) {\n  const t = Date.now();\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage2.icons[name] = icon;\n    } else {\n      storage2.missing[name] = t;\n    }\n  });\n}\n\nfunction addIconToStorage(storage2, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage2.icons[name] = Object.freeze(fullIcon(icon));\n      return true;\n    }\n  } catch (err) {}\n\n  return false;\n}\n\nfunction getIconFromStorage(storage2, name) {\n  const value = storage2.icons[name];\n  return value === void 0 ? null : value;\n}\n\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  let providers;\n\n  if (typeof provider === \"string\") {\n    providers = [provider];\n  } else {\n    providers = Object.keys(storage$1);\n  }\n\n  providers.forEach(provider2 => {\n    let prefixes;\n\n    if (typeof provider2 === \"string\" && typeof prefix === \"string\") {\n      prefixes = [prefix];\n    } else {\n      prefixes = storage$1[provider2] === void 0 ? [] : Object.keys(storage$1[provider2]);\n    }\n\n    prefixes.forEach(prefix2 => {\n      const storage2 = getStorage(provider2, prefix2);\n      const icons = Object.keys(storage2.icons).map(name => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name);\n      allIcons = allIcons.concat(icons);\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\n\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n\n  return simpleNames;\n}\n\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  return icon ? getIconFromStorage(getStorage(icon.provider, icon.prefix), icon.name) : null;\n}\n\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n\n  if (!icon) {\n    return false;\n  }\n\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\n\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n\n  if (typeof provider !== \"string\") {\n    provider = typeof data.provider === \"string\" ? data.provider : \"\";\n  }\n\n  if (simpleNames && provider === \"\" && (typeof data.prefix !== \"string\" || data.prefix === \"\")) {\n    let added = false;\n    parseIconSet(data, (name, icon) => {\n      if (icon && addIcon(name, icon)) {\n        added = true;\n      }\n    }, {\n      validate: {\n        fix: true,\n        prefix: \"\"\n      }\n    });\n    return added;\n  }\n\n  if (typeof data.prefix !== \"string\" || !validateIcon({\n    provider,\n    prefix: data.prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n\n  const storage = getStorage(provider, data.prefix);\n  return !!addIconSet(storage, data);\n}\n\nfunction iconExists(name) {\n  return getIconData(name) !== null;\n}\n\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? { ...result\n  } : null;\n}\n\nconst defaults = Object.freeze({\n  inline: false,\n  width: null,\n  height: null,\n  hAlign: \"center\",\n  vAlign: \"middle\",\n  slice: false,\n  hFlip: false,\n  vFlip: false,\n  rotate: 0\n});\n\nfunction mergeCustomisations(defaults2, item) {\n  const result = {};\n\n  for (const key in defaults2) {\n    const attr = key;\n    result[attr] = defaults2[attr];\n\n    if (item[attr] === void 0) {\n      continue;\n    }\n\n    const value = item[attr];\n\n    switch (attr) {\n      case \"inline\":\n      case \"slice\":\n        if (typeof value === \"boolean\") {\n          result[attr] = value;\n        }\n\n        break;\n\n      case \"hFlip\":\n      case \"vFlip\":\n        if (value === true) {\n          result[attr] = !result[attr];\n        }\n\n        break;\n\n      case \"hAlign\":\n      case \"vAlign\":\n        if (typeof value === \"string\" && value !== \"\") {\n          result[attr] = value;\n        }\n\n        break;\n\n      case \"width\":\n      case \"height\":\n        if (typeof value === \"string\" && value !== \"\" || typeof value === \"number\" && value || value === null) {\n          result[attr] = value;\n        }\n\n        break;\n\n      case \"rotate\":\n        if (typeof value === \"number\") {\n          result[attr] += value;\n        }\n\n        break;\n    }\n  }\n\n  return result;\n}\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n\n  precision = precision === void 0 ? 100 : precision;\n\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n\n  if (typeof size !== \"string\") {\n    return size;\n  }\n\n  const oldParts = size.split(unitsSplit);\n\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n\n    code = oldParts.shift();\n\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n\n    isNumber = !isNumber;\n  }\n}\n\nfunction preserveAspectRatio(props) {\n  let result = \"\";\n\n  switch (props.hAlign) {\n    case \"left\":\n      result += \"xMin\";\n      break;\n\n    case \"right\":\n      result += \"xMax\";\n      break;\n\n    default:\n      result += \"xMid\";\n  }\n\n  switch (props.vAlign) {\n    case \"top\":\n      result += \"YMin\";\n      break;\n\n    case \"bottom\":\n      result += \"YMax\";\n      break;\n\n    default:\n      result += \"YMid\";\n  }\n\n  result += props.slice ? \" slice\" : \" meet\";\n  return result;\n}\n\nfunction iconToSVG(icon, customisations) {\n  const box = {\n    left: icon.left,\n    top: icon.top,\n    width: icon.width,\n    height: icon.height\n  };\n  let body = icon.body;\n  [icon, customisations].forEach(props => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n\n    let tempValue;\n\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n\n    rotation = rotation % 4;\n\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\n        break;\n\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n    }\n\n    if (rotation % 2 === 1) {\n      if (box.left !== 0 || box.top !== 0) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  let width, height;\n\n  if (customisations.width === null && customisations.height === null) {\n    height = \"1em\";\n    width = calculateSize(height, box.width / box.height);\n  } else if (customisations.width !== null && customisations.height !== null) {\n    width = customisations.width;\n    height = customisations.height;\n  } else if (customisations.height !== null) {\n    height = customisations.height;\n    width = calculateSize(height, box.width / box.height);\n  } else {\n    width = customisations.width;\n    height = calculateSize(width, box.height / box.width);\n  }\n\n  if (width === \"auto\") {\n    width = box.width;\n  }\n\n  if (height === \"auto\") {\n    height = box.height;\n  }\n\n  width = typeof width === \"string\" ? width : width.toString() + \"\";\n  height = typeof height === \"string\" ? height : height.toString() + \"\";\n  const result = {\n    attributes: {\n      width,\n      height,\n      preserveAspectRatio: preserveAspectRatio(customisations),\n      viewBox: box.left.toString() + \" \" + box.top.toString() + \" \" + box.width.toString() + \" \" + box.height.toString()\n    },\n    body\n  };\n\n  if (customisations.inline) {\n    result.inline = true;\n  }\n\n  return result;\n}\n\nfunction buildIcon(icon, customisations) {\n  return iconToSVG(fullIcon(icon), customisations ? mergeCustomisations(defaults, customisations) : defaults);\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\n\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n\n  if (!ids.length) {\n    return body;\n  }\n\n  ids.forEach(id => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + \"$3\");\n  });\n  return body;\n}\n\nconst storage = /* @__PURE__ */Object.create(null);\n\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\n\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n\n  const result = {\n    resources,\n    path: source.path === void 0 ? \"/\" : source.path,\n    maxURL: source.maxURL ? source.maxURL : 500,\n    rotate: source.rotate ? source.rotate : 750,\n    timeout: source.timeout ? source.timeout : 5e3,\n    random: source.random === true,\n    index: source.index ? source.index : 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\n\nconst configStorage = /* @__PURE__ */Object.create(null);\nconst fallBackAPISources = [\"https://api.simplesvg.com\", \"https://api.unisvg.com\"];\nconst fallBackAPI = [];\n\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\n\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\n\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n\n  if (config === null) {\n    return false;\n  }\n\n  configStorage[provider] = config;\n  return true;\n}\n\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\n\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst mergeParams = (base, params) => {\n  let result = base,\n      hasParams = result.indexOf(\"?\") !== -1;\n\n  function paramToString(value) {\n    switch (typeof value) {\n      case \"boolean\":\n        return value ? \"true\" : \"false\";\n\n      case \"number\":\n        return encodeURIComponent(value);\n\n      case \"string\":\n        return encodeURIComponent(value);\n\n      default:\n        throw new Error(\"Invalid parameter\");\n    }\n  }\n\n  Object.keys(params).forEach(key => {\n    let value;\n\n    try {\n      value = paramToString(params[key]);\n    } catch (err) {\n      return;\n    }\n\n    result += (hasParams ? \"&\" : \"?\") + encodeURIComponent(key) + \"=\" + value;\n    hasParams = true;\n  });\n  return result;\n};\n\nconst maxLengthCache = {};\nconst pathCache = {};\n\nconst detectFetch = () => {\n  let callback;\n\n  try {\n    callback = fetch;\n\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {}\n\n  return null;\n};\n\nlet fetchModule = detectFetch();\n\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\n\nfunction getFetch() {\n  return fetchModule;\n}\n\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n\n  if (!config) {\n    return 0;\n  }\n\n  let result;\n\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach(item => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = mergeParams(prefix + \".json\", {\n      icons: \"\"\n    });\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n\n  const cacheKey = provider + \":\" + prefix;\n  pathCache[provider] = config.path;\n  maxLengthCache[cacheKey] = result;\n  return result;\n}\n\nfunction shouldAbort(status) {\n  return status === 404;\n}\n\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  let maxLength = maxLengthCache[prefix];\n\n  if (maxLength === void 0) {\n    maxLength = calculateMaxLength(provider, prefix);\n  }\n\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\n\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    if (pathCache[provider] === void 0) {\n      const config = getAPIConfig(provider);\n\n      if (!config) {\n        return \"/\";\n      }\n\n      pathCache[provider] = config.path;\n    }\n\n    return pathCache[provider];\n  }\n\n  return \"/\";\n}\n\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n\n  let path = getPath(params.provider);\n\n  switch (params.type) {\n    case \"icons\":\n      {\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(\",\");\n        path += mergeParams(prefix + \".json\", {\n          icons: iconsList\n        });\n        break;\n      }\n\n    case \"custom\":\n      {\n        const uri = params.uri;\n        path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n        break;\n      }\n\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n\n  let defaultError = 503;\n  fetchModule(host + path).then(response => {\n    const status = response.status;\n\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n\n    defaultError = 501;\n    return response.json();\n  }).then(data => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        callback(\"next\", defaultError);\n      });\n      return;\n    }\n\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\n\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach(icon => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n\n    if (storage[provider] === void 0) {\n      storage[provider] = /* @__PURE__ */Object.create(null);\n    }\n\n    const providerStorage = storage[provider];\n\n    if (providerStorage[prefix] === void 0) {\n      providerStorage[prefix] = getStorage(provider, prefix);\n    }\n\n    const localStorage = providerStorage[prefix];\n    let list;\n\n    if (localStorage.icons[name] !== void 0) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing[name] !== void 0) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nconst callbacks = /* @__PURE__ */Object.create(null);\nconst pendingUpdates = /* @__PURE__ */Object.create(null);\n\nfunction removeCallback(sources, id) {\n  sources.forEach(source => {\n    const provider = source.provider;\n\n    if (callbacks[provider] === void 0) {\n      return;\n    }\n\n    const providerCallbacks = callbacks[provider];\n    const prefix = source.prefix;\n    const items = providerCallbacks[prefix];\n\n    if (items) {\n      providerCallbacks[prefix] = items.filter(row => row.id !== id);\n    }\n  });\n}\n\nfunction updateCallbacks(provider, prefix) {\n  if (pendingUpdates[provider] === void 0) {\n    pendingUpdates[provider] = /* @__PURE__ */Object.create(null);\n  }\n\n  const providerPendingUpdates = pendingUpdates[provider];\n\n  if (!providerPendingUpdates[prefix]) {\n    providerPendingUpdates[prefix] = true;\n    setTimeout(() => {\n      providerPendingUpdates[prefix] = false;\n\n      if (callbacks[provider] === void 0 || callbacks[provider][prefix] === void 0) {\n        return;\n      }\n\n      const items = callbacks[provider][prefix].slice(0);\n\n      if (!items.length) {\n        return;\n      }\n\n      const storage = getStorage(provider, prefix);\n      let hasPending = false;\n      items.forEach(item => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter(icon => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n\n          const name = icon.name;\n\n          if (storage.icons[name] !== void 0) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing[name] !== void 0) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n\n          return false;\n        });\n\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([{\n              provider,\n              prefix\n            }], item.id);\n          }\n\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\n\nlet idCounter = 0;\n\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n\n  if (!icons.pending.length) {\n    return abort;\n  }\n\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach(source => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n\n    if (callbacks[provider] === void 0) {\n      callbacks[provider] = /* @__PURE__ */Object.create(null);\n    }\n\n    const providerCallbacks = callbacks[provider];\n\n    if (providerCallbacks[prefix] === void 0) {\n      providerCallbacks[prefix] = [];\n    }\n\n    providerCallbacks[prefix].push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach(item => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, false, simpleNames) : item;\n\n    if (!validate || validateIcon(icon, simpleNames)) {\n      result.push({\n        provider: icon.provider,\n        prefix: icon.prefix,\n        name: icon.name\n      });\n    }\n  });\n  return result;\n} // src/config.ts\n\n\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n}; // src/query.ts\n\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n\n    resetTimer();\n    queue.forEach(item => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach(callback => {\n      callback(void 0, lastError);\n    });\n  }\n\n  function clearQueue() {\n    queue.forEach(item => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter(queued => queued !== item);\n\n    switch (status) {\n      case \"pending\":\n        break;\n\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n\n        break;\n\n      default:\n        return;\n    }\n\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n\n    if (isError) {\n      lastError = data;\n\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n\n      return;\n    }\n\n    resetTimer();\n    clearQueue();\n\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n\n    status = \"completed\";\n    doneCallbacks.forEach(callback => {\n      callback(data);\n    });\n  }\n\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n\n    resetTimer();\n    const resource = resources.shift();\n\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n\n      failQuery();\n      return;\n    }\n\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n\n  setTimeout(execNext);\n  return getQueryStatus;\n} // src/index.ts\n\n\nfunction setConfig(config) {\n  if (typeof config !== \"object\" || typeof config.resources !== \"object\" || !(config.resources instanceof Array) || !config.resources.length) {\n    throw new Error(\"Invalid Reduncancy configuration\");\n  }\n\n  const newConfig = /* @__PURE__ */Object.create(null);\n  let key;\n\n  for (key in defaultConfig) {\n    if (config[key] !== void 0) {\n      newConfig[key] = config[key];\n    } else {\n      newConfig[key] = defaultConfig[key];\n    }\n  }\n\n  return newConfig;\n}\n\nfunction initRedundancy(cfg) {\n  const config = setConfig(cfg);\n  let queries = [];\n\n  function cleanup() {\n    queries = queries.filter(item => item().status === \"pending\");\n  }\n\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    });\n    queries.push(query2);\n    return query2;\n  }\n\n  function find(callback) {\n    const result = queries.find(value => {\n      return callback(value);\n    });\n    return result !== void 0 ? result : null;\n  }\n\n  const instance = {\n    query,\n    find,\n    setIndex: index => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {}\n\nconst redundancyCache = /* @__PURE__ */Object.create(null);\n\nfunction getRedundancyCache(provider) {\n  if (redundancyCache[provider] === void 0) {\n    const config = getAPIConfig(provider);\n\n    if (!config) {\n      return;\n    }\n\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n\n  return redundancyCache[provider];\n}\n\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n\n    send = api.send;\n    const cached = getRedundancyCache(target);\n\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst cache = {};\n\nfunction emptyCallback() {}\n\nconst pendingIcons = /* @__PURE__ */Object.create(null);\nconst iconsToLoad = /* @__PURE__ */Object.create(null);\nconst loaderFlags = /* @__PURE__ */Object.create(null);\nconst queueFlags = /* @__PURE__ */Object.create(null);\n\nfunction loadedNewIcons(provider, prefix) {\n  if (loaderFlags[provider] === void 0) {\n    loaderFlags[provider] = /* @__PURE__ */Object.create(null);\n  }\n\n  const providerLoaderFlags = loaderFlags[provider];\n\n  if (!providerLoaderFlags[prefix]) {\n    providerLoaderFlags[prefix] = true;\n    setTimeout(() => {\n      providerLoaderFlags[prefix] = false;\n      updateCallbacks(provider, prefix);\n    });\n  }\n}\n\nconst errorsCache = /* @__PURE__ */Object.create(null);\n\nfunction loadNewIcons(provider, prefix, icons) {\n  function err() {\n    const key = (provider === \"\" ? \"\" : \"@\" + provider + \":\") + prefix;\n    const time = Math.floor(Date.now() / 6e4);\n\n    if (errorsCache[key] < time) {\n      errorsCache[key] = time;\n      console.error('Unable to retrieve icons for \"' + key + '\" because API is not configured properly.');\n    }\n  }\n\n  if (iconsToLoad[provider] === void 0) {\n    iconsToLoad[provider] = /* @__PURE__ */Object.create(null);\n  }\n\n  const providerIconsToLoad = iconsToLoad[provider];\n\n  if (queueFlags[provider] === void 0) {\n    queueFlags[provider] = /* @__PURE__ */Object.create(null);\n  }\n\n  const providerQueueFlags = queueFlags[provider];\n\n  if (pendingIcons[provider] === void 0) {\n    pendingIcons[provider] = /* @__PURE__ */Object.create(null);\n  }\n\n  const providerPendingIcons = pendingIcons[provider];\n\n  if (providerIconsToLoad[prefix] === void 0) {\n    providerIconsToLoad[prefix] = icons;\n  } else {\n    providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();\n  }\n\n  if (!providerQueueFlags[prefix]) {\n    providerQueueFlags[prefix] = true;\n    setTimeout(() => {\n      providerQueueFlags[prefix] = false;\n      const icons2 = providerIconsToLoad[prefix];\n      delete providerIconsToLoad[prefix];\n      const api = getAPIModule(provider);\n\n      if (!api) {\n        err();\n        return;\n      }\n\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach(item => {\n        sendAPIQuery(provider, item, (data, error) => {\n          const storage = getStorage(provider, prefix);\n\n          if (typeof data !== \"object\") {\n            if (error !== 404) {\n              return;\n            }\n\n            const t = Date.now();\n            item.icons.forEach(name => {\n              storage.missing[name] = t;\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n\n              if (!parsed.length) {\n                return;\n              }\n\n              const pending = providerPendingIcons[prefix];\n              parsed.forEach(name => {\n                delete pending[name];\n              });\n\n              if (cache.store) {\n                cache.store(provider, data);\n              }\n            } catch (err2) {\n              console.error(err2);\n            }\n          }\n\n          loadedNewIcons(provider, prefix);\n        });\n      });\n    });\n  }\n}\n\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n\n    return () => {\n      callCallback = false;\n    };\n  }\n\n  const newIcons = /* @__PURE__ */Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach(icon => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push({\n      provider,\n      prefix\n    });\n\n    if (pendingIcons[provider] === void 0) {\n      pendingIcons[provider] = /* @__PURE__ */Object.create(null);\n    }\n\n    const providerPendingIcons = pendingIcons[provider];\n\n    if (providerPendingIcons[prefix] === void 0) {\n      providerPendingIcons[prefix] = /* @__PURE__ */Object.create(null);\n    }\n\n    if (newIcons[provider] === void 0) {\n      newIcons[provider] = /* @__PURE__ */Object.create(null);\n    }\n\n    const providerNewIcons = newIcons[provider];\n\n    if (providerNewIcons[prefix] === void 0) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  const time = Date.now();\n  sortedIcons.pending.forEach(icon => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const pendingQueue = pendingIcons[provider][prefix];\n\n    if (pendingQueue[name] === void 0) {\n      pendingQueue[name] = time;\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach(source => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\n\nconst loadIcon = icon => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon) : icon;\n    loadIcons([iconObj || icon], loaded => {\n      if (loaded.length && iconObj) {\n        const storage = getStorage(iconObj.provider, iconObj.prefix);\n        const data = getIconFromStorage(storage, iconObj.name);\n\n        if (data) {\n          fulfill(data);\n          return;\n        }\n      }\n\n      reject(icon);\n    });\n  });\n};\n\nconst cacheVersion = \"iconify2\";\nconst cachePrefix = \"iconify\";\nconst countKey = cachePrefix + \"-count\";\nconst versionKey = cachePrefix + \"-version\";\nconst hour = 36e5;\nconst cacheExpiration = 168;\nconst config = {\n  local: true,\n  session: true\n};\nlet loaded = false;\nconst count = {\n  local: 0,\n  session: 0\n};\nconst emptyList = {\n  local: [],\n  session: []\n};\n\nlet _window = typeof window === \"undefined\" ? {} : window;\n\nfunction getGlobal(key) {\n  const attr = key + \"Storage\";\n\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {}\n\n  config[key] = false;\n  return null;\n}\n\nfunction setCount(storage, key, value) {\n  try {\n    storage.setItem(countKey, value.toString());\n    count[key] = value;\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction getCount(storage) {\n  const count2 = storage.getItem(countKey);\n\n  if (count2) {\n    const total = parseInt(count2);\n    return total ? total : 0;\n  }\n\n  return 0;\n}\n\nfunction initCache(storage, key) {\n  try {\n    storage.setItem(versionKey, cacheVersion);\n  } catch (err) {}\n\n  setCount(storage, key, 0);\n}\n\nfunction destroyCache(storage) {\n  try {\n    const total = getCount(storage);\n\n    for (let i = 0; i < total; i++) {\n      storage.removeItem(cachePrefix + i.toString());\n    }\n  } catch (err) {}\n}\n\nconst loadCache = () => {\n  if (loaded) {\n    return;\n  }\n\n  loaded = true;\n  const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n\n  function load(key) {\n    const func = getGlobal(key);\n\n    if (!func) {\n      return;\n    }\n\n    const getItem = index => {\n      const name = cachePrefix + index.toString();\n      const item = func.getItem(name);\n\n      if (typeof item !== \"string\") {\n        return false;\n      }\n\n      let valid = true;\n\n      try {\n        const data = JSON.parse(item);\n\n        if (typeof data !== \"object\" || typeof data.cached !== \"number\" || data.cached < minTime || typeof data.provider !== \"string\" || typeof data.data !== \"object\" || typeof data.data.prefix !== \"string\") {\n          valid = false;\n        } else {\n          const provider = data.provider;\n          const prefix = data.data.prefix;\n          const storage = getStorage(provider, prefix);\n          valid = addIconSet(storage, data.data).length > 0;\n        }\n      } catch (err) {\n        valid = false;\n      }\n\n      if (!valid) {\n        func.removeItem(name);\n      }\n\n      return valid;\n    };\n\n    try {\n      const version = func.getItem(versionKey);\n\n      if (version !== cacheVersion) {\n        if (version) {\n          destroyCache(func);\n        }\n\n        initCache(func, key);\n        return;\n      }\n\n      let total = getCount(func);\n\n      for (let i = total - 1; i >= 0; i--) {\n        if (!getItem(i)) {\n          if (i === total - 1) {\n            total--;\n          } else {\n            emptyList[key].push(i);\n          }\n        }\n      }\n\n      setCount(func, key, total);\n    } catch (err) {}\n  }\n\n  for (const key in config) {\n    load(key);\n  }\n};\n\nconst storeCache = (provider, data) => {\n  if (!loaded) {\n    loadCache();\n  }\n\n  function store(key) {\n    if (!config[key]) {\n      return false;\n    }\n\n    const func = getGlobal(key);\n\n    if (!func) {\n      return false;\n    }\n\n    let index = emptyList[key].shift();\n\n    if (index === void 0) {\n      index = count[key];\n\n      if (!setCount(func, key, index + 1)) {\n        return false;\n      }\n    }\n\n    try {\n      const item = {\n        cached: Math.floor(Date.now() / hour),\n        provider,\n        data\n      };\n      func.setItem(cachePrefix + index.toString(), JSON.stringify(item));\n    } catch (err) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      config[storage] = value;\n      break;\n\n    case \"all\":\n      for (const key in config) {\n        config[key] = value;\n      }\n\n      break;\n  }\n}\n\nconst separator = /[\\s,]+/;\n\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach(str => {\n    const value = str.trim();\n\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction alignmentFromString(custom, align) {\n  align.split(separator).forEach(str => {\n    const value = str.trim();\n\n    switch (value) {\n      case \"left\":\n      case \"center\":\n      case \"right\":\n        custom.hAlign = value;\n        break;\n\n      case \"top\":\n      case \"middle\":\n      case \"bottom\":\n        custom.vAlign = value;\n        break;\n\n      case \"slice\":\n      case \"crop\":\n        custom.slice = true;\n        break;\n\n      case \"meet\":\n        custom.slice = false;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n\n    return value2 % 4;\n  }\n\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n\n      case \"deg\":\n        split = 90;\n    }\n\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n\n      if (isNaN(num)) {\n        return 0;\n      }\n\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n\n  return defaultValue;\n}\n/**\n * Default SVG attributes\n */\n\n\nconst svgDefaults = {\n  'xmlns': 'http://www.w3.org/2000/svg',\n  'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n  'aria-hidden': true,\n  'role': 'img'\n};\n/**\n * Aliases for customisations.\n * In Vue 'v-' properties are reserved, so v-align and v-flip must be renamed\n */\n\nlet customisationAliases = {};\n['horizontal', 'vertical'].forEach(prefix => {\n  ['Align', 'Flip'].forEach(suffix => {\n    const attr = prefix.slice(0, 1) + suffix;\n    const value = {\n      attr,\n      boolean: suffix === 'Flip'\n    }; // vertical-align\n\n    customisationAliases[prefix + '-' + suffix.toLowerCase()] = value; // v-align\n\n    customisationAliases[prefix.slice(0, 1) + '-' + suffix.toLowerCase()] = value; // verticalAlign\n\n    customisationAliases[prefix + suffix] = value;\n  });\n});\n/**\n * Render icon\n */\n\nconst render = ( // Icon must be validated before calling this function\nicon, // Partial properties\nprops) => {\n  // Split properties\n  const customisations = mergeCustomisations(defaults, props);\n  const componentProps = { ...svgDefaults\n  }; // Copy style\n\n  let style = typeof props.style === 'object' && !(props.style instanceof Array) ? { ...props.style\n  } : {}; // Get element properties\n\n  for (let key in props) {\n    const value = props[key];\n\n    if (value === void 0) {\n      continue;\n    }\n\n    switch (key) {\n      // Properties to ignore\n      case 'icon':\n      case 'style':\n      case 'onLoad':\n        break;\n      // Boolean attributes\n\n      case 'inline':\n      case 'hFlip':\n      case 'vFlip':\n        customisations[key] = value === true || value === 'true' || value === 1;\n        break;\n      // Flip as string: 'horizontal,vertical'\n\n      case 'flip':\n        if (typeof value === 'string') {\n          flipFromString(customisations, value);\n        }\n\n        break;\n      // Alignment as string\n\n      case 'align':\n        if (typeof value === 'string') {\n          alignmentFromString(customisations, value);\n        }\n\n        break;\n      // Color: override style\n\n      case 'color':\n        style.color = value;\n        break;\n      // Rotation as string\n\n      case 'rotate':\n        if (typeof value === 'string') {\n          customisations[key] = rotateFromString(value);\n        } else if (typeof value === 'number') {\n          customisations[key] = value;\n        }\n\n        break;\n      // Remove aria-hidden\n\n      case 'ariaHidden':\n      case 'aria-hidden':\n        // Vue transforms 'aria-hidden' property to 'ariaHidden'\n        if (value !== true && value !== 'true') {\n          delete componentProps['aria-hidden'];\n        }\n\n        break;\n\n      default:\n        if (customisationAliases[key] !== void 0) {\n          // Aliases for customisations\n          if (customisationAliases[key].boolean && (value === true || value === 'true' || value === 1)) {\n            // Check for boolean\n            customisations[customisationAliases[key].attr] = true;\n          } else if (!customisationAliases[key].boolean && typeof value === 'string' && value !== '') {\n            // String\n            customisations[customisationAliases[key].attr] = value;\n          }\n        } else if (defaults[key] === void 0) {\n          // Copy missing property if it does not exist in customisations\n          componentProps[key] = value;\n        }\n\n    }\n  } // Generate icon\n\n\n  const item = iconToSVG(icon, customisations); // Add icon stuff\n\n  for (let key in item.attributes) {\n    componentProps[key] = item.attributes[key];\n  }\n\n  if (item.inline && style.verticalAlign === void 0 && style['vertical-align'] === void 0) {\n    style.verticalAlign = '-0.125em';\n  } // Counter for ids based on \"id\" property to render icons consistently on server and client\n\n\n  let localCounter = 0;\n  let id = props.id;\n\n  if (typeof id === 'string') {\n    // Convert '-' to '_' to avoid errors in animations\n    id = id.replace(/-/g, '_');\n  } // Add innerHTML and style to props\n\n\n  componentProps['innerHTML'] = replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyVue');\n\n  if (Object.keys(style).length > 0) {\n    componentProps['style'] = style;\n  } // Render icon\n\n\n  return h('svg', componentProps);\n};\n/**\n * Enable cache\n */\n\n\nfunction enableCache(storage) {\n  toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\n\n\nfunction disableCache(storage) {\n  toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\n\n\nallowSimpleNames(true); // Set API module\n\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // Set cache and load existing cache\n  cache.store = storeCache;\n  loadCache();\n  const _window = window; // Load icons from global \"IconifyPreload\"\n\n  if (_window.IconifyPreload !== void 0) {\n    const preload = _window.IconifyPreload;\n    const err = 'Invalid IconifyPreload syntax.';\n\n    if (typeof preload === 'object' && preload !== null) {\n      (preload instanceof Array ? preload : [preload]).forEach(item => {\n        try {\n          if ( // Check if item is an object and not null/array\n          typeof item !== 'object' || item === null || item instanceof Array || // Check for 'icons' and 'prefix'\n          typeof item.icons !== 'object' || typeof item.prefix !== 'string' || // Add icon set\n          !addCollection(item)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      });\n    }\n  } // Set API from global \"IconifyProviders\"\n\n\n  if (_window.IconifyProviders !== void 0) {\n    const providers = _window.IconifyProviders;\n\n    if (typeof providers === 'object' && providers !== null) {\n      for (let key in providers) {\n        const err = 'IconifyProviders[' + key + '] is invalid.';\n\n        try {\n          const value = providers[key];\n\n          if (typeof value !== 'object' || !value || value.resources === void 0) {\n            continue;\n          }\n\n          if (!addAPIProvider(key, value)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      }\n    }\n  }\n}\n/**\n * Empty icon data, rendered when icon is not available\n */\n\n\nconst emptyIcon = fullIcon({\n  body: ''\n});\nconst Icon = defineComponent({\n  // Do not inherit other attributes: it is handled by render()\n  inheritAttrs: false,\n\n  // Set initial data\n  data() {\n    return {\n      // Mounted status\n      iconMounted: false,\n      // Callback counter to trigger re-render\n      counter: 0\n    };\n  },\n\n  mounted() {\n    // Current icon name\n    this._name = ''; // Loading\n\n    this._loadingIcon = null; // Mark as mounted\n\n    this.iconMounted = true;\n  },\n\n  unmounted() {\n    this.abortLoading();\n  },\n\n  methods: {\n    abortLoading() {\n      if (this._loadingIcon) {\n        this._loadingIcon.abort();\n\n        this._loadingIcon = null;\n      }\n    },\n\n    // Get data for icon to render or null\n    getIcon(icon, onload) {\n      // Icon is an object\n      if (typeof icon === 'object' && icon !== null && typeof icon.body === 'string') {\n        // Stop loading\n        this._name = '';\n        this.abortLoading();\n        return {\n          data: fullIcon(icon)\n        };\n      } // Invalid icon?\n\n\n      let iconName;\n\n      if (typeof icon !== 'string' || (iconName = stringToIcon(icon, false, true)) === null) {\n        this.abortLoading();\n        return null;\n      } // Load icon\n\n\n      const data = getIconData(iconName);\n\n      if (data === null) {\n        // Icon needs to be loaded\n        if (!this._loadingIcon || this._loadingIcon.name !== icon) {\n          // New icon to load\n          this.abortLoading();\n          this._name = '';\n          this._loadingIcon = {\n            name: icon,\n            abort: loadIcons([iconName], () => {\n              this.counter++;\n            })\n          };\n        }\n\n        return null;\n      } // Icon data is available\n\n\n      this.abortLoading();\n\n      if (this._name !== icon) {\n        this._name = icon;\n\n        if (onload) {\n          onload(icon);\n        }\n      } // Add classes\n\n\n      const classes = ['iconify'];\n\n      if (iconName.prefix !== '') {\n        classes.push('iconify--' + iconName.prefix);\n      }\n\n      if (iconName.provider !== '') {\n        classes.push('iconify--' + iconName.provider);\n      }\n\n      return {\n        data,\n        classes\n      };\n    }\n\n  },\n\n  // Render icon\n  render() {\n    // Re-render when counter changes\n    this.counter;\n    const props = this.$attrs; // Get icon data\n\n    const icon = this.iconMounted ? this.getIcon(props.icon, props.onLoad) : null; // Validate icon object\n\n    if (!icon) {\n      return render(emptyIcon, props);\n    } // Add classes\n\n\n    let newProps = props;\n\n    if (icon.classes) {\n      newProps = { ...props,\n        class: (typeof props['class'] === 'string' ? props['class'] + ' ' : '') + icon.classes.join(' ')\n      };\n    } // Render icon\n\n\n    return render(icon.data, newProps);\n  }\n\n});\n/**\n * Internal API\n */\n\nconst _api = {\n  getAPIConfig,\n  setAPIModule,\n  sendAPIQuery,\n  setFetch,\n  getFetch,\n  listAPIProviders,\n  mergeParams\n};\nexport { Icon, _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs, shareStorage };","map":{"version":3,"sources":["C:/Users/pen6-mkt/Desktop/PASTA COM TRABALHOS DA PEN 6/windzo/node_modules/@iconify/vue/dist/iconify.mjs"],"names":["h","defineComponent","matchName","iconDefaults","Object","freeze","left","top","width","height","rotate","vFlip","hFlip","fullIcon","data","stringToIcon","value","validate","allowSimpleName","provider","colonSeparated","split","slice","length","shift","name2","pop","prefix","result","name","validateIcon","dashSeparated","join","icon","match","mergeIconData","alias","key","prop","getIconData$1","full","getIcon","iteration","icons","assign","aliases","item","result2","parent","chars","matchChar","validateIconProps","fix","attr","type","validateIconSet","obj","options","Error","keys","forEach","body","not_found","Array","validateAlias","validatedAliases","has","failedAliases","add","Set","expectedType","actualType","char","exec","target","isVariation","parseIconSet","callback","names","err","push","iconData","parseAliases","storageVersion","storage$1","create","w","window","self","_iconifyStorage","version","storage","shareStorage","newStorage","missing","getStorage","providerStorage","addIconSet","storage2","t","Date","now","addIconToStorage","getIconFromStorage","listIcons","allIcons","providers","provider2","prefixes","prefix2","map","concat","simpleNames","allowSimpleNames","allow","getIconData","addIcon","addCollection","added","iconExists","defaults","inline","hAlign","vAlign","mergeCustomisations","defaults2","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","preserveAspectRatio","props","iconToSVG","customisations","box","transformations","rotation","toString","tempValue","floor","unshift","attributes","viewBox","buildIcon","regex","randomPrefix","random","counter","replaceIDs","ids","id","newID","escapedID","replace","RegExp","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","listAPIProviders","mergeParams","base","params","hasParams","indexOf","paramToString","encodeURIComponent","maxLengthCache","pathCache","detectFetch","fetch","fetchModule","setFetch","fetch2","getFetch","calculateMaxLength","maxHostLength","host","max","url","cacheKey","shouldAbort","status","prepare","results","maxLength","getPath","send","iconsList","uri","defaultError","then","response","setTimeout","json","catch","fetchAPIModule","sortIcons","loaded","pending","sort","a","b","localeCompare","lastIcon","localStorage","list","callbacks","pendingUpdates","removeCallback","sources","providerCallbacks","items","filter","row","updateCallbacks","providerPendingUpdates","hasPending","oldLength","abort","idCounter","storeCallback","pendingSources","bind","listToIcons","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","nextIndex","startTime","queriesSent","lastError","timer","queue","doneCallbacks","resetTimer","clearTimeout","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","moduleResponse","isError","queued","execNext","resource","status2","setConfig","newConfig","initRedundancy","cfg","queries","cleanup","queryCallback","doneCallback","query2","error","find","instance","setIndex","getIndex","emptyCallback$1","redundancyCache","getRedundancyCache","redundancy","cachedReundancy","sendAPIQuery","api","cached","moduleKey","cache","emptyCallback","pendingIcons","iconsToLoad","loaderFlags","queueFlags","loadedNewIcons","providerLoaderFlags","errorsCache","loadNewIcons","time","console","providerIconsToLoad","providerQueueFlags","providerPendingIcons","icons2","parsed","store","err2","loadIcons","cleanedIcons","sortedIcons","callCallback","newIcons","lastProvider","lastPrefix","providerNewIcons","pendingQueue","loadIcon","Promise","fulfill","reject","iconObj","cacheVersion","cachePrefix","countKey","versionKey","hour","cacheExpiration","local","session","count","emptyList","_window","getGlobal","setCount","setItem","getCount","count2","getItem","total","parseInt","initCache","destroyCache","i","removeItem","loadCache","minTime","load","func","valid","JSON","parse","storeCache","stringify","toggleBrowserCache","separator","flipFromString","custom","flip","str","trim","alignmentFromString","align","rotateFromString","defaultValue","units","value2","svgDefaults","customisationAliases","suffix","boolean","toLowerCase","render","componentProps","style","color","verticalAlign","localCounter","enableCache","disableCache","document","IconifyPreload","preload","e","IconifyProviders","emptyIcon","Icon","inheritAttrs","iconMounted","mounted","_name","_loadingIcon","unmounted","abortLoading","methods","onload","iconName","classes","$attrs","onLoad","newProps","class","_api"],"mappings":"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","sourcesContent":["import { h, defineComponent } from 'vue';\n\nconst matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst iconDefaults = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nfunction fullIcon(data) {\n  return { ...iconDefaults, ...data };\n}\n\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIcon(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIcon = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchName)) && icon.name.match(matchName));\n};\n\nfunction mergeIconData(icon, alias) {\n  const result = { ...icon };\n  for (const key in iconDefaults) {\n    const prop = key;\n    if (alias[prop] !== void 0) {\n      const value = alias[prop];\n      if (result[prop] === void 0) {\n        result[prop] = value;\n        continue;\n      }\n      switch (prop) {\n        case \"rotate\":\n          result[prop] = (result[prop] + value) % 4;\n          break;\n        case \"hFlip\":\n        case \"vFlip\":\n          result[prop] = value !== result[prop];\n          break;\n        default:\n          result[prop] = value;\n      }\n    }\n  }\n  return result;\n}\n\nfunction getIconData$1(data, name, full = false) {\n  function getIcon(name2, iteration) {\n    if (data.icons[name2] !== void 0) {\n      return Object.assign({}, data.icons[name2]);\n    }\n    if (iteration > 5) {\n      return null;\n    }\n    if (data.aliases?.[name2] !== void 0) {\n      const item = data.aliases?.[name2];\n      const result2 = getIcon(item.parent, iteration + 1);\n      if (result2) {\n        return mergeIconData(result2, item);\n      }\n      return result2;\n    }\n    if (iteration === 0 && data.chars?.[name2] !== void 0) {\n      return getIcon(data.chars?.[name2], iteration + 1);\n    }\n    return null;\n  }\n  const result = getIcon(name, 0);\n  if (result) {\n    for (const key in iconDefaults) {\n      if (result[key] === void 0 && data[key] !== void 0) {\n        result[key] = data[key];\n      }\n    }\n  }\n  return result && full ? fullIcon(result) : result;\n}\n\nconst matchChar = /^[a-f0-9]+(-[a-f0-9]+)*$/;\nfunction validateIconProps(item, fix) {\n  for (const key in item) {\n    const attr = key;\n    const value = item[attr];\n    const type = typeof value;\n    if (type === \"undefined\") {\n      delete item[attr];\n      continue;\n    }\n    switch (key) {\n      case \"body\":\n      case \"parent\":\n        if (type !== \"string\") {\n          return key;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n      case \"hidden\":\n        if (type !== \"boolean\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n        break;\n      case \"width\":\n      case \"height\":\n      case \"left\":\n      case \"top\":\n      case \"rotate\":\n      case \"inlineHeight\":\n      case \"inlineTop\":\n      case \"verticalAlign\":\n        if (type !== \"number\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n        break;\n      default:\n        if (type === \"object\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n    }\n  }\n  return null;\n}\nfunction validateIconSet(obj, options) {\n  const fix = !!options?.fix;\n  if (typeof obj !== \"object\" || obj === null || typeof obj.icons !== \"object\" || !obj.icons) {\n    throw new Error(\"Bad icon set\");\n  }\n  const data = obj;\n  if (typeof options?.prefix === \"string\") {\n    data.prefix = options.prefix;\n  } else if (typeof data.prefix !== \"string\" || !data.prefix.match(matchName)) {\n    throw new Error(\"Invalid prefix\");\n  }\n  if (typeof options?.provider === \"string\") {\n    data.provider = options.provider;\n  } else if (data.provider !== void 0) {\n    const value = data.provider;\n    if (typeof value !== \"string\" || value !== \"\" && !value.match(matchName)) {\n      if (fix) {\n        delete data.provider;\n      } else {\n        throw new Error(\"Invalid provider\");\n      }\n    }\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    if (!name.match(matchName)) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid icon name: \"${name}\"`);\n    }\n    const item = icons[name];\n    if (typeof item !== \"object\" || item === null || typeof item.body !== \"string\") {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid icon: \"${name}\"`);\n    }\n    const key = typeof item.parent === \"string\" ? \"parent\" : validateIconProps(item, fix);\n    if (key !== null) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid property \"${key}\" in icon \"${name}\"`);\n    }\n  });\n  if (data.not_found !== void 0 && !(data.not_found instanceof Array)) {\n    if (fix) {\n      delete data.not_found;\n    } else {\n      throw new Error(\"Invalid not_found list\");\n    }\n  }\n  if (!Object.keys(data.icons).length && !data.not_found?.length) {\n    throw new Error(\"Icon set is empty\");\n  }\n  if (data.aliases !== void 0) {\n    if (typeof data.aliases !== \"object\" || data.aliases === null) {\n      if (fix) {\n        delete data.aliases;\n      } else {\n        throw new Error(\"Invalid aliases list\");\n      }\n    }\n  }\n  if (typeof data.aliases === \"object\") {\n    let validateAlias = function(name, iteration) {\n      if (validatedAliases.has(name)) {\n        return !failedAliases.has(name);\n      }\n      const item = aliases[name];\n      if (iteration > 5 || typeof item !== \"object\" || item === null || typeof item.parent !== \"string\" || !name.match(matchName)) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n        throw new Error(`Invalid icon alias: \"${name}\"`);\n      }\n      const parent = item.parent;\n      if (data.icons[parent] === void 0) {\n        if (aliases[parent] === void 0 || !validateAlias(parent, iteration + 1)) {\n          if (fix) {\n            delete aliases[name];\n            failedAliases.add(name);\n            return false;\n          }\n          throw new Error(`Missing parent icon for alias \"${name}`);\n        }\n      }\n      if (fix && item.body !== void 0) {\n        delete item.body;\n      }\n      const key = item.body !== void 0 ? \"body\" : validateIconProps(item, fix);\n      if (key !== null) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n        throw new Error(`Invalid property \"${key}\" in alias \"${name}\"`);\n      }\n      validatedAliases.add(name);\n      return true;\n    };\n    const aliases = data.aliases;\n    const validatedAliases = new Set();\n    const failedAliases = new Set();\n    Object.keys(aliases).forEach((name) => {\n      validateAlias(name, 0);\n    });\n    if (fix && !Object.keys(data.aliases).length) {\n      delete data.aliases;\n    }\n  }\n  Object.keys(iconDefaults).forEach((prop) => {\n    const expectedType = typeof iconDefaults[prop];\n    const actualType = typeof data[prop];\n    if (actualType !== \"undefined\" && actualType !== expectedType) {\n      throw new Error(`Invalid value type for \"${prop}\"`);\n    }\n  });\n  if (data.chars !== void 0) {\n    if (typeof data.chars !== \"object\" || data.chars === null) {\n      if (fix) {\n        delete data.chars;\n      } else {\n        throw new Error(\"Invalid characters map\");\n      }\n    }\n  }\n  if (typeof data.chars === \"object\") {\n    const chars = data.chars;\n    Object.keys(chars).forEach((char) => {\n      if (!matchChar.exec(char) || typeof chars[char] !== \"string\") {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n        throw new Error(`Invalid character \"${char}\"`);\n      }\n      const target = chars[char];\n      if (data.icons[target] === void 0 && data.aliases?.[target] === void 0) {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n        throw new Error(`Character \"${char}\" points to missing icon \"${target}\"`);\n      }\n    });\n    if (fix && !Object.keys(data.chars).length) {\n      delete data.chars;\n    }\n  }\n  return data;\n}\n\nfunction isVariation(item) {\n  for (const key in iconDefaults) {\n    if (item[key] !== void 0) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction parseIconSet(data, callback, options) {\n  options = options || {};\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  const validate = options.validate;\n  if (validate !== false) {\n    try {\n      validateIconSet(data, typeof validate === \"object\" ? validate : { fix: true });\n    } catch (err) {\n      return names;\n    }\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    const iconData = getIconData$1(data, name, true);\n    if (iconData) {\n      callback(name, iconData);\n      names.push(name);\n    }\n  });\n  const parseAliases = options.aliases || \"all\";\n  if (parseAliases !== \"none\" && typeof data.aliases === \"object\") {\n    const aliases = data.aliases;\n    Object.keys(aliases).forEach((name) => {\n      if (parseAliases === \"variations\" && isVariation(aliases[name])) {\n        return;\n      }\n      const iconData = getIconData$1(data, name, true);\n      if (iconData) {\n        callback(name, iconData);\n        names.push(name);\n      }\n    });\n  }\n  return names;\n}\n\nconst storageVersion = 1;\nlet storage$1 = /* @__PURE__ */ Object.create(null);\ntry {\n  const w = window || self;\n  if (w?._iconifyStorage.version === storageVersion) {\n    storage$1 = w._iconifyStorage.storage;\n  }\n} catch (err) {\n}\nfunction shareStorage() {\n  try {\n    const w = window || self;\n    if (w && !w._iconifyStorage) {\n      w._iconifyStorage = {\n        version: storageVersion,\n        storage: storage$1\n      };\n    }\n  } catch (err) {\n  }\n}\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ Object.create(null)\n  };\n}\nfunction getStorage(provider, prefix) {\n  if (storage$1[provider] === void 0) {\n    storage$1[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerStorage = storage$1[provider];\n  if (providerStorage[prefix] === void 0) {\n    providerStorage[prefix] = newStorage(provider, prefix);\n  }\n  return providerStorage[prefix];\n}\nfunction addIconSet(storage2, data) {\n  const t = Date.now();\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage2.icons[name] = icon;\n    } else {\n      storage2.missing[name] = t;\n    }\n  });\n}\nfunction addIconToStorage(storage2, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage2.icons[name] = Object.freeze(fullIcon(icon));\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction getIconFromStorage(storage2, name) {\n  const value = storage2.icons[name];\n  return value === void 0 ? null : value;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  let providers;\n  if (typeof provider === \"string\") {\n    providers = [provider];\n  } else {\n    providers = Object.keys(storage$1);\n  }\n  providers.forEach((provider2) => {\n    let prefixes;\n    if (typeof provider2 === \"string\" && typeof prefix === \"string\") {\n      prefixes = [prefix];\n    } else {\n      prefixes = storage$1[provider2] === void 0 ? [] : Object.keys(storage$1[provider2]);\n    }\n    prefixes.forEach((prefix2) => {\n      const storage2 = getStorage(provider2, prefix2);\n      const icons = Object.keys(storage2.icons).map((name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name);\n      allIcons = allIcons.concat(icons);\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  return icon ? getIconFromStorage(getStorage(icon.provider, icon.prefix), icon.name) : null;\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = typeof data.provider === \"string\" ? data.provider : \"\";\n  }\n  if (simpleNames && provider === \"\" && (typeof data.prefix !== \"string\" || data.prefix === \"\")) {\n    let added = false;\n    parseIconSet(data, (name, icon) => {\n      if (icon && addIcon(name, icon)) {\n        added = true;\n      }\n    }, {\n      validate: {\n        fix: true,\n        prefix: \"\"\n      }\n    });\n    return added;\n  }\n  if (typeof data.prefix !== \"string\" || !validateIcon({\n    provider,\n    prefix: data.prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, data.prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return getIconData(name) !== null;\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? { ...result } : null;\n}\n\nconst defaults = Object.freeze({\n  inline: false,\n  width: null,\n  height: null,\n  hAlign: \"center\",\n  vAlign: \"middle\",\n  slice: false,\n  hFlip: false,\n  vFlip: false,\n  rotate: 0\n});\nfunction mergeCustomisations(defaults2, item) {\n  const result = {};\n  for (const key in defaults2) {\n    const attr = key;\n    result[attr] = defaults2[attr];\n    if (item[attr] === void 0) {\n      continue;\n    }\n    const value = item[attr];\n    switch (attr) {\n      case \"inline\":\n      case \"slice\":\n        if (typeof value === \"boolean\") {\n          result[attr] = value;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n        if (value === true) {\n          result[attr] = !result[attr];\n        }\n        break;\n      case \"hAlign\":\n      case \"vAlign\":\n        if (typeof value === \"string\" && value !== \"\") {\n          result[attr] = value;\n        }\n        break;\n      case \"width\":\n      case \"height\":\n        if (typeof value === \"string\" && value !== \"\" || typeof value === \"number\" && value || value === null) {\n          result[attr] = value;\n        }\n        break;\n      case \"rotate\":\n        if (typeof value === \"number\") {\n          result[attr] += value;\n        }\n        break;\n    }\n  }\n  return result;\n}\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision === void 0 ? 100 : precision;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nfunction preserveAspectRatio(props) {\n  let result = \"\";\n  switch (props.hAlign) {\n    case \"left\":\n      result += \"xMin\";\n      break;\n    case \"right\":\n      result += \"xMax\";\n      break;\n    default:\n      result += \"xMid\";\n  }\n  switch (props.vAlign) {\n    case \"top\":\n      result += \"YMin\";\n      break;\n    case \"bottom\":\n      result += \"YMax\";\n      break;\n    default:\n      result += \"YMid\";\n  }\n  result += props.slice ? \" slice\" : \" meet\";\n  return result;\n}\nfunction iconToSVG(icon, customisations) {\n  const box = {\n    left: icon.left,\n    top: icon.top,\n    width: icon.width,\n    height: icon.height\n  };\n  let body = icon.body;\n  [icon, customisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== 0 || box.top !== 0) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  let width, height;\n  if (customisations.width === null && customisations.height === null) {\n    height = \"1em\";\n    width = calculateSize(height, box.width / box.height);\n  } else if (customisations.width !== null && customisations.height !== null) {\n    width = customisations.width;\n    height = customisations.height;\n  } else if (customisations.height !== null) {\n    height = customisations.height;\n    width = calculateSize(height, box.width / box.height);\n  } else {\n    width = customisations.width;\n    height = calculateSize(width, box.height / box.width);\n  }\n  if (width === \"auto\") {\n    width = box.width;\n  }\n  if (height === \"auto\") {\n    height = box.height;\n  }\n  width = typeof width === \"string\" ? width : width.toString() + \"\";\n  height = typeof height === \"string\" ? height : height.toString() + \"\";\n  const result = {\n    attributes: {\n      width,\n      height,\n      preserveAspectRatio: preserveAspectRatio(customisations),\n      viewBox: box.left.toString() + \" \" + box.top.toString() + \" \" + box.width.toString() + \" \" + box.height.toString()\n    },\n    body\n  };\n  if (customisations.inline) {\n    result.inline = true;\n  }\n  return result;\n}\n\nfunction buildIcon(icon, customisations) {\n  return iconToSVG(fullIcon(icon), customisations ? mergeCustomisations(defaults, customisations) : defaults);\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + \"$3\");\n  });\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    resources,\n    path: source.path === void 0 ? \"/\" : source.path,\n    maxURL: source.maxURL ? source.maxURL : 500,\n    rotate: source.rotate ? source.rotate : 750,\n    timeout: source.timeout ? source.timeout : 5e3,\n    random: source.random === true,\n    index: source.index ? source.index : 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst mergeParams = (base, params) => {\n  let result = base, hasParams = result.indexOf(\"?\") !== -1;\n  function paramToString(value) {\n    switch (typeof value) {\n      case \"boolean\":\n        return value ? \"true\" : \"false\";\n      case \"number\":\n        return encodeURIComponent(value);\n      case \"string\":\n        return encodeURIComponent(value);\n      default:\n        throw new Error(\"Invalid parameter\");\n    }\n  }\n  Object.keys(params).forEach((key) => {\n    let value;\n    try {\n      value = paramToString(params[key]);\n    } catch (err) {\n      return;\n    }\n    result += (hasParams ? \"&\" : \"?\") + encodeURIComponent(key) + \"=\" + value;\n    hasParams = true;\n  });\n  return result;\n};\n\nconst maxLengthCache = {};\nconst pathCache = {};\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n  return null;\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = mergeParams(prefix + \".json\", {\n      icons: \"\"\n    });\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  const cacheKey = provider + \":\" + prefix;\n  pathCache[provider] = config.path;\n  maxLengthCache[cacheKey] = result;\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  let maxLength = maxLengthCache[prefix];\n  if (maxLength === void 0) {\n    maxLength = calculateMaxLength(provider, prefix);\n  }\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    if (pathCache[provider] === void 0) {\n      const config = getAPIConfig(provider);\n      if (!config) {\n        return \"/\";\n      }\n      pathCache[provider] = config.path;\n    }\n    return pathCache[provider];\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      path += mergeParams(prefix + \".json\", {\n        icons: iconsList\n      });\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        callback(\"next\", defaultError);\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    if (storage[provider] === void 0) {\n      storage[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerStorage = storage[provider];\n    if (providerStorage[prefix] === void 0) {\n      providerStorage[prefix] = getStorage(provider, prefix);\n    }\n    const localStorage = providerStorage[prefix];\n    let list;\n    if (localStorage.icons[name] !== void 0) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing[name] !== void 0) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nconst callbacks = /* @__PURE__ */ Object.create(null);\nconst pendingUpdates = /* @__PURE__ */ Object.create(null);\nfunction removeCallback(sources, id) {\n  sources.forEach((source) => {\n    const provider = source.provider;\n    if (callbacks[provider] === void 0) {\n      return;\n    }\n    const providerCallbacks = callbacks[provider];\n    const prefix = source.prefix;\n    const items = providerCallbacks[prefix];\n    if (items) {\n      providerCallbacks[prefix] = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(provider, prefix) {\n  if (pendingUpdates[provider] === void 0) {\n    pendingUpdates[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerPendingUpdates = pendingUpdates[provider];\n  if (!providerPendingUpdates[prefix]) {\n    providerPendingUpdates[prefix] = true;\n    setTimeout(() => {\n      providerPendingUpdates[prefix] = false;\n      if (callbacks[provider] === void 0 || callbacks[provider][prefix] === void 0) {\n        return;\n      }\n      const items = callbacks[provider][prefix].slice(0);\n      if (!items.length) {\n        return;\n      }\n      const storage = getStorage(provider, prefix);\n      let hasPending = false;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name] !== void 0) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing[name] !== void 0) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([\n              {\n                provider,\n                prefix\n              }\n            ], item.id);\n          }\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (callbacks[provider] === void 0) {\n      callbacks[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerCallbacks = callbacks[provider];\n    if (providerCallbacks[prefix] === void 0) {\n      providerCallbacks[prefix] = [];\n    }\n    providerCallbacks[prefix].push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, false, simpleNames) : item;\n    if (!validate || validateIcon(icon, simpleNames)) {\n      result.push({\n        provider: icon.provider,\n        prefix: icon.prefix,\n        name: icon.name\n      });\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction setConfig(config) {\n  if (typeof config !== \"object\" || typeof config.resources !== \"object\" || !(config.resources instanceof Array) || !config.resources.length) {\n    throw new Error(\"Invalid Reduncancy configuration\");\n  }\n  const newConfig = /* @__PURE__ */ Object.create(null);\n  let key;\n  for (key in defaultConfig) {\n    if (config[key] !== void 0) {\n      newConfig[key] = config[key];\n    } else {\n      newConfig[key] = defaultConfig[key];\n    }\n  }\n  return newConfig;\n}\nfunction initRedundancy(cfg) {\n  const config = setConfig(cfg);\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    });\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    const result = queries.find((value) => {\n      return callback(value);\n    });\n    return result !== void 0 ? result : null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (redundancyCache[provider] === void 0) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst cache = {};\n\nfunction emptyCallback() {\n}\nconst pendingIcons = /* @__PURE__ */ Object.create(null);\nconst iconsToLoad = /* @__PURE__ */ Object.create(null);\nconst loaderFlags = /* @__PURE__ */ Object.create(null);\nconst queueFlags = /* @__PURE__ */ Object.create(null);\nfunction loadedNewIcons(provider, prefix) {\n  if (loaderFlags[provider] === void 0) {\n    loaderFlags[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerLoaderFlags = loaderFlags[provider];\n  if (!providerLoaderFlags[prefix]) {\n    providerLoaderFlags[prefix] = true;\n    setTimeout(() => {\n      providerLoaderFlags[prefix] = false;\n      updateCallbacks(provider, prefix);\n    });\n  }\n}\nconst errorsCache = /* @__PURE__ */ Object.create(null);\nfunction loadNewIcons(provider, prefix, icons) {\n  function err() {\n    const key = (provider === \"\" ? \"\" : \"@\" + provider + \":\") + prefix;\n    const time = Math.floor(Date.now() / 6e4);\n    if (errorsCache[key] < time) {\n      errorsCache[key] = time;\n      console.error('Unable to retrieve icons for \"' + key + '\" because API is not configured properly.');\n    }\n  }\n  if (iconsToLoad[provider] === void 0) {\n    iconsToLoad[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerIconsToLoad = iconsToLoad[provider];\n  if (queueFlags[provider] === void 0) {\n    queueFlags[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerQueueFlags = queueFlags[provider];\n  if (pendingIcons[provider] === void 0) {\n    pendingIcons[provider] = /* @__PURE__ */ Object.create(null);\n  }\n  const providerPendingIcons = pendingIcons[provider];\n  if (providerIconsToLoad[prefix] === void 0) {\n    providerIconsToLoad[prefix] = icons;\n  } else {\n    providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();\n  }\n  if (!providerQueueFlags[prefix]) {\n    providerQueueFlags[prefix] = true;\n    setTimeout(() => {\n      providerQueueFlags[prefix] = false;\n      const icons2 = providerIconsToLoad[prefix];\n      delete providerIconsToLoad[prefix];\n      const api = getAPIModule(provider);\n      if (!api) {\n        err();\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data, error) => {\n          const storage = getStorage(provider, prefix);\n          if (typeof data !== \"object\") {\n            if (error !== 404) {\n              return;\n            }\n            const t = Date.now();\n            item.icons.forEach((name) => {\n              storage.missing[name] = t;\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n              if (!parsed.length) {\n                return;\n              }\n              const pending = providerPendingIcons[prefix];\n              parsed.forEach((name) => {\n                delete pending[name];\n              });\n              if (cache.store) {\n                cache.store(provider, data);\n              }\n            } catch (err2) {\n              console.error(err2);\n            }\n          }\n          loadedNewIcons(provider, prefix);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push({\n      provider,\n      prefix\n    });\n    if (pendingIcons[provider] === void 0) {\n      pendingIcons[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerPendingIcons = pendingIcons[provider];\n    if (providerPendingIcons[prefix] === void 0) {\n      providerPendingIcons[prefix] = /* @__PURE__ */ Object.create(null);\n    }\n    if (newIcons[provider] === void 0) {\n      newIcons[provider] = /* @__PURE__ */ Object.create(null);\n    }\n    const providerNewIcons = newIcons[provider];\n    if (providerNewIcons[prefix] === void 0) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  const time = Date.now();\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const pendingQueue = pendingIcons[provider][prefix];\n    if (pendingQueue[name] === void 0) {\n      pendingQueue[name] = time;\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon) : icon;\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const storage = getStorage(iconObj.provider, iconObj.prefix);\n        const data = getIconFromStorage(storage, iconObj.name);\n        if (data) {\n          fulfill(data);\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nconst cacheVersion = \"iconify2\";\nconst cachePrefix = \"iconify\";\nconst countKey = cachePrefix + \"-count\";\nconst versionKey = cachePrefix + \"-version\";\nconst hour = 36e5;\nconst cacheExpiration = 168;\nconst config = {\n  local: true,\n  session: true\n};\nlet loaded = false;\nconst count = {\n  local: 0,\n  session: 0\n};\nconst emptyList = {\n  local: [],\n  session: []\n};\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getGlobal(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  config[key] = false;\n  return null;\n}\nfunction setCount(storage, key, value) {\n  try {\n    storage.setItem(countKey, value.toString());\n    count[key] = value;\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nfunction getCount(storage) {\n  const count2 = storage.getItem(countKey);\n  if (count2) {\n    const total = parseInt(count2);\n    return total ? total : 0;\n  }\n  return 0;\n}\nfunction initCache(storage, key) {\n  try {\n    storage.setItem(versionKey, cacheVersion);\n  } catch (err) {\n  }\n  setCount(storage, key, 0);\n}\nfunction destroyCache(storage) {\n  try {\n    const total = getCount(storage);\n    for (let i = 0; i < total; i++) {\n      storage.removeItem(cachePrefix + i.toString());\n    }\n  } catch (err) {\n  }\n}\nconst loadCache = () => {\n  if (loaded) {\n    return;\n  }\n  loaded = true;\n  const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n  function load(key) {\n    const func = getGlobal(key);\n    if (!func) {\n      return;\n    }\n    const getItem = (index) => {\n      const name = cachePrefix + index.toString();\n      const item = func.getItem(name);\n      if (typeof item !== \"string\") {\n        return false;\n      }\n      let valid = true;\n      try {\n        const data = JSON.parse(item);\n        if (typeof data !== \"object\" || typeof data.cached !== \"number\" || data.cached < minTime || typeof data.provider !== \"string\" || typeof data.data !== \"object\" || typeof data.data.prefix !== \"string\") {\n          valid = false;\n        } else {\n          const provider = data.provider;\n          const prefix = data.data.prefix;\n          const storage = getStorage(provider, prefix);\n          valid = addIconSet(storage, data.data).length > 0;\n        }\n      } catch (err) {\n        valid = false;\n      }\n      if (!valid) {\n        func.removeItem(name);\n      }\n      return valid;\n    };\n    try {\n      const version = func.getItem(versionKey);\n      if (version !== cacheVersion) {\n        if (version) {\n          destroyCache(func);\n        }\n        initCache(func, key);\n        return;\n      }\n      let total = getCount(func);\n      for (let i = total - 1; i >= 0; i--) {\n        if (!getItem(i)) {\n          if (i === total - 1) {\n            total--;\n          } else {\n            emptyList[key].push(i);\n          }\n        }\n      }\n      setCount(func, key, total);\n    } catch (err) {\n    }\n  }\n  for (const key in config) {\n    load(key);\n  }\n};\nconst storeCache = (provider, data) => {\n  if (!loaded) {\n    loadCache();\n  }\n  function store(key) {\n    if (!config[key]) {\n      return false;\n    }\n    const func = getGlobal(key);\n    if (!func) {\n      return false;\n    }\n    let index = emptyList[key].shift();\n    if (index === void 0) {\n      index = count[key];\n      if (!setCount(func, key, index + 1)) {\n        return false;\n      }\n    }\n    try {\n      const item = {\n        cached: Math.floor(Date.now() / hour),\n        provider,\n        data\n      };\n      func.setItem(cachePrefix + index.toString(), JSON.stringify(item));\n    } catch (err) {\n      return false;\n    }\n    return true;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      config[storage] = value;\n      break;\n    case \"all\":\n      for (const key in config) {\n        config[key] = value;\n      }\n      break;\n  }\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\nfunction alignmentFromString(custom, align) {\n  align.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"left\":\n      case \"center\":\n      case \"right\":\n        custom.hAlign = value;\n        break;\n      case \"top\":\n      case \"middle\":\n      case \"bottom\":\n        custom.vAlign = value;\n        break;\n      case \"slice\":\n      case \"crop\":\n        custom.slice = true;\n        break;\n      case \"meet\":\n        custom.slice = false;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Aliases for customisations.\n * In Vue 'v-' properties are reserved, so v-align and v-flip must be renamed\n */\nlet customisationAliases = {};\n['horizontal', 'vertical'].forEach((prefix) => {\n    ['Align', 'Flip'].forEach((suffix) => {\n        const attr = prefix.slice(0, 1) + suffix;\n        const value = {\n            attr,\n            boolean: suffix === 'Flip',\n        };\n        // vertical-align\n        customisationAliases[prefix + '-' + suffix.toLowerCase()] = value;\n        // v-align\n        customisationAliases[prefix.slice(0, 1) + '-' + suffix.toLowerCase()] =\n            value;\n        // verticalAlign\n        customisationAliases[prefix + suffix] = value;\n    });\n});\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops) => {\n    // Split properties\n    const customisations = mergeCustomisations(defaults, props);\n    const componentProps = { ...svgDefaults };\n    // Copy style\n    let style = typeof props.style === 'object' && !(props.style instanceof Array)\n        ? { ...props.style }\n        : {};\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'onLoad':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Alignment as string\n            case 'align':\n                if (typeof value === 'string') {\n                    alignmentFromString(customisations, value);\n                }\n                break;\n            // Color: override style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                // Vue transforms 'aria-hidden' property to 'ariaHidden'\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            default:\n                if (customisationAliases[key] !== void 0) {\n                    // Aliases for customisations\n                    if (customisationAliases[key].boolean &&\n                        (value === true || value === 'true' || value === 1)) {\n                        // Check for boolean\n                        customisations[customisationAliases[key].attr] = true;\n                    }\n                    else if (!customisationAliases[key].boolean &&\n                        typeof value === 'string' &&\n                        value !== '') {\n                        // String\n                        customisations[customisationAliases[key].attr] = value;\n                    }\n                }\n                else if (defaults[key] === void 0) {\n                    // Copy missing property if it does not exist in customisations\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    // Add icon stuff\n    for (let key in item.attributes) {\n        componentProps[key] = item.attributes[key];\n    }\n    if (item.inline &&\n        style.verticalAlign === void 0 &&\n        style['vertical-align'] === void 0) {\n        style.verticalAlign = '-0.125em';\n    }\n    // Counter for ids based on \"id\" property to render icons consistently on server and client\n    let localCounter = 0;\n    let id = props.id;\n    if (typeof id === 'string') {\n        // Convert '-' to '_' to avoid errors in animations\n        id = id.replace(/-/g, '_');\n    }\n    // Add innerHTML and style to props\n    componentProps['innerHTML'] = replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyVue');\n    if (Object.keys(style).length > 0) {\n        componentProps['style'] = style;\n    }\n    // Render icon\n    return h('svg', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    cache.store = storeCache;\n    loadCache();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\n/**\n * Empty icon data, rendered when icon is not available\n */\nconst emptyIcon = fullIcon({\n    body: '',\n});\nconst Icon = defineComponent({\n    // Do not inherit other attributes: it is handled by render()\n    inheritAttrs: false,\n    // Set initial data\n    data() {\n        return {\n            // Mounted status\n            iconMounted: false,\n            // Callback counter to trigger re-render\n            counter: 0,\n        };\n    },\n    mounted() {\n        // Current icon name\n        this._name = '';\n        // Loading\n        this._loadingIcon = null;\n        // Mark as mounted\n        this.iconMounted = true;\n    },\n    unmounted() {\n        this.abortLoading();\n    },\n    methods: {\n        abortLoading() {\n            if (this._loadingIcon) {\n                this._loadingIcon.abort();\n                this._loadingIcon = null;\n            }\n        },\n        // Get data for icon to render or null\n        getIcon(icon, onload) {\n            // Icon is an object\n            if (typeof icon === 'object' &&\n                icon !== null &&\n                typeof icon.body === 'string') {\n                // Stop loading\n                this._name = '';\n                this.abortLoading();\n                return {\n                    data: fullIcon(icon),\n                };\n            }\n            // Invalid icon?\n            let iconName;\n            if (typeof icon !== 'string' ||\n                (iconName = stringToIcon(icon, false, true)) === null) {\n                this.abortLoading();\n                return null;\n            }\n            // Load icon\n            const data = getIconData(iconName);\n            if (data === null) {\n                // Icon needs to be loaded\n                if (!this._loadingIcon || this._loadingIcon.name !== icon) {\n                    // New icon to load\n                    this.abortLoading();\n                    this._name = '';\n                    this._loadingIcon = {\n                        name: icon,\n                        abort: loadIcons([iconName], () => {\n                            this.counter++;\n                        }),\n                    };\n                }\n                return null;\n            }\n            // Icon data is available\n            this.abortLoading();\n            if (this._name !== icon) {\n                this._name = icon;\n                if (onload) {\n                    onload(icon);\n                }\n            }\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            return { data, classes };\n        },\n    },\n    // Render icon\n    render() {\n        // Re-render when counter changes\n        this.counter;\n        const props = this.$attrs;\n        // Get icon data\n        const icon = this.iconMounted\n            ? this.getIcon(props.icon, props.onLoad)\n            : null;\n        // Validate icon object\n        if (!icon) {\n            return render(emptyIcon, props);\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                class: (typeof props['class'] === 'string'\n                    ? props['class'] + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render(icon.data, newProps);\n    },\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n    mergeParams,\n};\n\nexport { Icon, _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs, shareStorage };\n"]},"metadata":{},"sourceType":"module"}