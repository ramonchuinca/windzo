{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { __extends } from \"tslib\";\nimport './polyfills';\nimport { scrollbarMap, Scrollbar } from './scrollbar';\nimport { addPlugins, ScrollbarPlugin } from './plugin';\nimport { attachStyle, detachStyle } from './style';\nexport { ScrollbarPlugin };\n/**\n * cast `I.Scrollbar` to `Scrollbar` to avoid error\n *\n * `I.Scrollbar` is not assignable to `Scrollbar`:\n *     \"privateProp\" is missing in `I.Scrollbar`\n *\n * @see https://github.com/Microsoft/TypeScript/issues/2672\n */\n\nvar SmoothScrollbar =\n/** @class */\nfunction (_super) {\n  __extends(SmoothScrollbar, _super);\n\n  function SmoothScrollbar() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Initializes a scrollbar on the given element.\n   *\n   * @param elem The DOM element that you want to initialize scrollbar to\n   * @param [options] Initial options\n   */\n\n\n  SmoothScrollbar.init = function (elem, options) {\n    if (!elem || elem.nodeType !== 1) {\n      throw new TypeError(\"expect element to be DOM Element, but got \" + elem);\n    } // attach stylesheet\n\n\n    attachStyle();\n\n    if (scrollbarMap.has(elem)) {\n      return scrollbarMap.get(elem);\n    }\n\n    return new Scrollbar(elem, options);\n  };\n  /**\n   * Automatically init scrollbar on all elements base on the selector `[data-scrollbar]`\n   *\n   * @param options Initial options\n   */\n\n\n  SmoothScrollbar.initAll = function (options) {\n    return Array.from(document.querySelectorAll('[data-scrollbar]'), function (elem) {\n      return SmoothScrollbar.init(elem, options);\n    });\n  };\n  /**\n   * Check if there is a scrollbar on given element\n   *\n   * @param elem The DOM element that you want to check\n   */\n\n\n  SmoothScrollbar.has = function (elem) {\n    return scrollbarMap.has(elem);\n  };\n  /**\n   * Gets scrollbar on the given element.\n   * If no scrollbar instance exsits, returns `undefined`\n   *\n   * @param elem The DOM element that you want to check.\n   */\n\n\n  SmoothScrollbar.get = function (elem) {\n    return scrollbarMap.get(elem);\n  };\n  /**\n   * Returns an array that contains all scrollbar instances\n   */\n\n\n  SmoothScrollbar.getAll = function () {\n    return Array.from(scrollbarMap.values());\n  };\n  /**\n   * Removes scrollbar on the given element\n   */\n\n\n  SmoothScrollbar.destroy = function (elem) {\n    var scrollbar = scrollbarMap.get(elem);\n\n    if (scrollbar) {\n      scrollbar.destroy();\n    }\n  };\n  /**\n   * Removes all scrollbar instances from current document\n   */\n\n\n  SmoothScrollbar.destroyAll = function () {\n    scrollbarMap.forEach(function (scrollbar) {\n      scrollbar.destroy();\n    });\n  };\n  /**\n   * Attaches plugins to scrollbars\n   *\n   * @param ...Plugins Scrollbar plugin classes\n   */\n\n\n  SmoothScrollbar.use = function () {\n    var Plugins = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      Plugins[_i] = arguments[_i];\n    }\n\n    return addPlugins.apply(void 0, Plugins);\n  };\n  /**\n   * Attaches default style sheets to current document.\n   * You don't need to call this method manually unless\n   * you removed the default styles via `Scrollbar.detachStyle()`\n   */\n\n\n  SmoothScrollbar.attachStyle = function () {\n    return attachStyle();\n  };\n  /**\n   * Removes default styles from current document.\n   * Use this method when you want to use your own css for scrollbars.\n   */\n\n\n  SmoothScrollbar.detachStyle = function () {\n    return detachStyle();\n  };\n\n  SmoothScrollbar.version = \"8.7.4\";\n  SmoothScrollbar.ScrollbarPlugin = ScrollbarPlugin;\n  return SmoothScrollbar;\n}(Scrollbar);\n\nexport default SmoothScrollbar;","map":{"version":3,"mappings":"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","names":["scrollbarMap","Scrollbar","addPlugins","ScrollbarPlugin","attachStyle","detachStyle","__extends","SmoothScrollbar","elem","options","nodeType","TypeError","has","get","Array","from","document","querySelectorAll","init","values","scrollbar","destroy","forEach","Plugins"],"sourceRoot":"","sources":["src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}