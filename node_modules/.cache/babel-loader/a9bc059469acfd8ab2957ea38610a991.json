{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { __assign } from \"tslib\";\n\nvar ScrollbarPlugin =\n/** @class */\nfunction () {\n  function ScrollbarPlugin(scrollbar, options) {\n    var _newTarget = this.constructor;\n    this.scrollbar = scrollbar;\n    this.name = _newTarget.pluginName;\n    this.options = __assign(__assign({}, _newTarget.defaultOptions), options);\n  }\n\n  ScrollbarPlugin.prototype.onInit = function () {};\n\n  ScrollbarPlugin.prototype.onDestroy = function () {};\n\n  ScrollbarPlugin.prototype.onUpdate = function () {};\n\n  ScrollbarPlugin.prototype.onRender = function (_remainMomentum) {};\n\n  ScrollbarPlugin.prototype.transformDelta = function (delta, _evt) {\n    return __assign({}, delta);\n  };\n\n  ScrollbarPlugin.pluginName = '';\n  ScrollbarPlugin.defaultOptions = {};\n  return ScrollbarPlugin;\n}();\n\nexport { ScrollbarPlugin };\nexport var globalPlugins = {\n  order: new Set(),\n  constructors: {}\n};\nexport function addPlugins() {\n  var Plugins = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    Plugins[_i] = arguments[_i];\n  }\n\n  Plugins.forEach(function (P) {\n    var pluginName = P.pluginName;\n\n    if (!pluginName) {\n      throw new TypeError(\"plugin name is required\");\n    }\n\n    globalPlugins.order.add(pluginName);\n    globalPlugins.constructors[pluginName] = P;\n  });\n}\nexport function initPlugins(scrollbar, options) {\n  return Array.from(globalPlugins.order).filter(function (pluginName) {\n    return options[pluginName] !== false;\n  }).map(function (pluginName) {\n    var Plugin = globalPlugins.constructors[pluginName];\n    var instance = new Plugin(scrollbar, options[pluginName]); // bind plugin options to `scrollbar.options`\n\n    options[pluginName] = instance.options;\n    return instance;\n  });\n}","map":{"version":3,"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;AACA,IAAIC,eAAe;AAAG;AAAe,YAAY;AAC7C,WAASA,eAAT,CAAyBC,SAAzB,EAAoCC,OAApC,EAA6C;AACzC,QAAIC,UAAU,GAAG,KAAKC,WAAtB;AACA,SAAKH,SAAL,GAAiBA,SAAjB;AACA,SAAKI,IAAL,GAAYF,UAAU,CAACG,UAAvB;AACA,SAAKJ,OAAL,GAAeH,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKI,UAAU,CAACI,cAAhB,CAAT,EAA0CL,OAA1C,CAAvB;AACH;;AACDF,EAAAA,eAAe,CAACQ,SAAhB,CAA0BC,MAA1B,GAAmC,YAAY,CAAG,CAAlD;;AACAT,EAAAA,eAAe,CAACQ,SAAhB,CAA0BE,SAA1B,GAAsC,YAAY,CAAG,CAArD;;AACAV,EAAAA,eAAe,CAACQ,SAAhB,CAA0BG,QAA1B,GAAqC,YAAY,CAAG,CAApD;;AACAX,EAAAA,eAAe,CAACQ,SAAhB,CAA0BI,QAA1B,GAAqC,UAAUC,eAAV,EAA2B,CAAG,CAAnE;;AACAb,EAAAA,eAAe,CAACQ,SAAhB,CAA0BM,cAA1B,GAA2C,UAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AAC9D,WAAOjB,QAAQ,CAAC,EAAD,EAAKgB,KAAL,CAAf;AACH,GAFD;;AAGAf,EAAAA,eAAe,CAACM,UAAhB,GAA6B,EAA7B;AACAN,EAAAA,eAAe,CAACO,cAAhB,GAAiC,EAAjC;AACA,SAAOP,eAAP;AACH,CAjBoC,EAArC;;AAkBA,SAASA,eAAT;AACA,OAAO,IAAIiB,aAAa,GAAG;AACvBC,EAAAA,KAAK,EAAE,IAAIC,GAAJ,EADgB;AAEvBC,EAAAA,YAAY,EAAE;AAFS,CAApB;AAIP,OAAO,SAASC,UAAT,GAAsB;AACzB,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,OAAO,CAACC,EAAD,CAAP,GAAcC,SAAS,CAACD,EAAD,CAAvB;AACH;;AACDD,EAAAA,OAAO,CAACI,OAAR,CAAgB,UAAUC,CAAV,EAAa;AACzB,QAAIrB,UAAU,GAAGqB,CAAC,CAACrB,UAAnB;;AACA,QAAI,CAACA,UAAL,EAAiB;AACb,YAAM,IAAIsB,SAAJ,CAAc,yBAAd,CAAN;AACH;;AACDX,IAAAA,aAAa,CAACC,KAAd,CAAoBW,GAApB,CAAwBvB,UAAxB;AACAW,IAAAA,aAAa,CAACG,YAAd,CAA2Bd,UAA3B,IAAyCqB,CAAzC;AACH,GAPD;AAQH;AACD,OAAO,SAASG,WAAT,CAAqB7B,SAArB,EAAgCC,OAAhC,EAAyC;AAC5C,SAAO6B,KAAK,CAACC,IAAN,CAAWf,aAAa,CAACC,KAAzB,EACFe,MADE,CACK,UAAU3B,UAAV,EAAsB;AAC9B,WAAOJ,OAAO,CAACI,UAAD,CAAP,KAAwB,KAA/B;AACH,GAHM,EAIF4B,GAJE,CAIE,UAAU5B,UAAV,EAAsB;AAC3B,QAAI6B,MAAM,GAAGlB,aAAa,CAACG,YAAd,CAA2Bd,UAA3B,CAAb;AACA,QAAI8B,QAAQ,GAAG,IAAID,MAAJ,CAAWlC,SAAX,EAAsBC,OAAO,CAACI,UAAD,CAA7B,CAAf,CAF2B,CAG3B;;AACAJ,IAAAA,OAAO,CAACI,UAAD,CAAP,GAAsB8B,QAAQ,CAAClC,OAA/B;AACA,WAAOkC,QAAP;AACH,GAVM,CAAP;AAWH","names":["scrollbar","options","name","_newTarget","pluginName","__assign","defaultOptions","ScrollbarPlugin","_remainMomentum","delta","_evt","globalPlugins","order","Set","constructors","addPlugins","Plugins","forEach","P","TypeError","add","initPlugins","Array","from","filter","map","Plugin","instance"],"sourceRoot":"","sources":["src/plugin.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}