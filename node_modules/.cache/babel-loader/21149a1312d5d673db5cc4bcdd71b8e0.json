{"ast":null,"code":"import { TrackDirection } from './direction';\nimport { setStyle } from '../utils/';\n\nvar ScrollbarThumb =\n/** @class */\nfunction () {\n  function ScrollbarThumb(_direction, _minSize) {\n    if (_minSize === void 0) {\n      _minSize = 0;\n    }\n\n    this._direction = _direction;\n    this._minSize = _minSize;\n    /**\n     * Thumb element\n     */\n\n    this.element = document.createElement('div');\n    /**\n     * Display size of the thumb\n     * will always be greater than `scrollbar.options.thumbMinSize`\n     */\n\n    this.displaySize = 0;\n    /**\n     * Actual size of the thumb\n     */\n\n    this.realSize = 0;\n    /**\n     * Thumb offset to the top\n     */\n\n    this.offset = 0;\n    this.element.className = \"scrollbar-thumb scrollbar-thumb-\" + _direction;\n  }\n  /**\n   * Attach to track element\n   *\n   * @param trackEl Track element\n   */\n\n\n  ScrollbarThumb.prototype.attachTo = function (trackEl) {\n    trackEl.appendChild(this.element);\n  };\n\n  ScrollbarThumb.prototype.update = function (scrollOffset, containerSize, pageSize) {\n    // calculate thumb size\n    // pageSize > containerSize -> scrollable\n    this.realSize = Math.min(containerSize / pageSize, 1) * containerSize;\n    this.displaySize = Math.max(this.realSize, this._minSize); // calculate thumb offset\n\n    this.offset = scrollOffset / pageSize * (containerSize + (this.realSize - this.displaySize));\n    setStyle(this.element, this._getStyle());\n  };\n\n  ScrollbarThumb.prototype._getStyle = function () {\n    switch (this._direction) {\n      case TrackDirection.X:\n        return {\n          width: this.displaySize + \"px\",\n          '-transform': \"translate3d(\" + this.offset + \"px, 0, 0)\"\n        };\n\n      case TrackDirection.Y:\n        return {\n          height: this.displaySize + \"px\",\n          '-transform': \"translate3d(0, \" + this.offset + \"px, 0)\"\n        };\n\n      default:\n        return null;\n    }\n  };\n\n  return ScrollbarThumb;\n}();\n\nexport { ScrollbarThumb };","map":{"version":3,"mappings":"AAAA,SAASA,cAAT,QAA+B,aAA/B;AACA,SAASC,QAAT,QAAyB,WAAzB;;AACA,IAAIC,cAAc;AAAG;AAAe,YAAY;AAC5C,WAASA,cAAT,CAAwBC,UAAxB,EAAoCC,QAApC,EAA8C;AAC1C,QAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,MAAAA,QAAQ,GAAG,CAAX;AAAe;;AAC1C,SAAKD,UAAL,GAAkBA,UAAlB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA;AACR;AACA;;AACQ,SAAKC,OAAL,GAAeC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACA;AACR;AACA;AACA;;AACQ,SAAKC,WAAL,GAAmB,CAAnB;AACA;AACR;AACA;;AACQ,SAAKC,QAAL,GAAgB,CAAhB;AACA;AACR;AACA;;AACQ,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKL,OAAL,CAAaM,SAAb,GAAyB,qCAAqCR,UAA9D;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACID,EAAAA,cAAc,CAACU,SAAf,CAAyBC,QAAzB,GAAoC,UAAUC,OAAV,EAAmB;AACnDA,IAAAA,OAAO,CAACC,WAAR,CAAoB,KAAKV,OAAzB;AACH,GAFD;;AAGAH,EAAAA,cAAc,CAACU,SAAf,CAAyBI,MAAzB,GAAkC,UAAUC,YAAV,EAAwBC,aAAxB,EAAuCC,QAAvC,EAAiD;AAC/E;AACA;AACA,SAAKV,QAAL,GAAgBW,IAAI,CAACC,GAAL,CAASH,aAAa,GAAGC,QAAzB,EAAmC,CAAnC,IAAwCD,aAAxD;AACA,SAAKV,WAAL,GAAmBY,IAAI,CAACE,GAAL,CAAS,KAAKb,QAAd,EAAwB,KAAKL,QAA7B,CAAnB,CAJ+E,CAK/E;;AACA,SAAKM,MAAL,GAAcO,YAAY,GAAGE,QAAf,IAA2BD,aAAa,IAAI,KAAKT,QAAL,GAAgB,KAAKD,WAAzB,CAAxC,CAAd;AACAP,IAAAA,QAAQ,CAAC,KAAKI,OAAN,EAAe,KAAKkB,SAAL,EAAf,CAAR;AACH,GARD;;AASArB,EAAAA,cAAc,CAACU,SAAf,CAAyBW,SAAzB,GAAqC,YAAY;AAC7C,YAAQ,KAAKpB,UAAb;AACI,WAAKH,cAAc,CAACwB,CAApB;AACI,eAAO;AACHC,UAAAA,KAAK,EAAE,KAAKjB,WAAL,GAAmB,IADvB;AAEH,wBAAc,iBAAiB,KAAKE,MAAtB,GAA+B;AAF1C,SAAP;;AAIJ,WAAKV,cAAc,CAAC0B,CAApB;AACI,eAAO;AACHC,UAAAA,MAAM,EAAE,KAAKnB,WAAL,GAAmB,IADxB;AAEH,wBAAc,oBAAoB,KAAKE,MAAzB,GAAkC;AAF7C,SAAP;;AAIJ;AACI,eAAO,IAAP;AAZR;AAcH,GAfD;;AAgBA,SAAOR,cAAP;AACH,CA1DmC,EAApC;;AA2DA,SAASA,cAAT","names":["TrackDirection","setStyle","_direction","_minSize","document","createElement","element","className","ScrollbarThumb","trackEl","appendChild","scrollOffset","containerSize","pageSize","realSize","Math","min","displaySize","max","offset","_getStyle","X","width","Y","height"],"sourceRoot":"","sources":["../src/track/thumb.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}